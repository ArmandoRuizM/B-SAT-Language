#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 190 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 50 205 50 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 85 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 224
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 25 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 9 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 9 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 107 142 35
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 100 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 100 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 139 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 139 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 65 105 225
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 65 105 225
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 70 130 180
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 70 130 180
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 47 79 79 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 139 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 139 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 75 0 130 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 75 0 130 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 160 32 240
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 250 128 114
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 250 128 114
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 184 134 11
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 128 128 0
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 128 128 0
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 169 169 169
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 169 169 169
255 228 225 -1 -1 85 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 85 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 85 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 84 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 191 255 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 191 255 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 152 251 152
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 185 220 113
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 155 255 155
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 116 116
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 18 67 155 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 30 70 190 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 135 185 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 208 208
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 116 116 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 125 255
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 143 15 223 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 141 19 5 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 244 194 71 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 127
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 86 86 86 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
30 3 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 31 31 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 0 31
31 -1 -1           0 6508 0 29 3 10 #"#lang eopl"
0 0 25 29 1 #"\n"
0 9         409 22           0 0           0 67 0 14 3 8 #"Proyecto"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 11 #"Fundamentos"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 9 #"Lenguajes"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 13 #"Programacion:"
0 0 25 29 1 #"\n"
0 0 14 3 8 #"Profesor"
0 0 25 3 1 #" "
0 0 14 3 8 #"Robinson"
0 0 25 3 1 #" "
0 0 14 3 6 #"Duque."
0 0 25 29 1 #"\n"
0 0 14 3 11 #"Integrantes"
0 0 25 3 1 #" "
0 0 14 3 3 #"del"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipo:"
0 0 25 29 1 #"\n"
0 0 14 3 9 #"-Cristian"
0 0 25 3 1 #" "
0 0 14 3 6 #"Alexis"
0 0 25 3 1 #" "
0 0 14 3 7 #"Alegria"
0 0 25 3 1 #" "
0 0 14 3 8 #"Carre\303\261o"
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 7 #"1813013"
0 0 25 29 1 #"\n"
0 0 14 3 9 #"-Katerine"
0 0 25 3 1 #" "
0 0 14 3 9 #"Rodriguez"
0 0 25 3 1 #" "
0 0 14 3 8 #"Casta\303\261o"
0 0 25 3 6 #"      "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 7 #"1810238"
0 0 25 29 1 #"\n"
0 0 14 3 8 #"-Armando"
0 0 25 3 1 #" "
0 0 14 3 4 #"Ruiz"
0 0 25 3 1 #" "
0 0 14 3 6 #"Mendez"
0 0 25 3 13 #"             "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 7 #"1872076"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 8 #"Lenguaje"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 13 #"programaci\303\263n"
0 0 25 3 1 #" "
0 0 14 3 5 #"B-SAT"
0 0 25 29 1 #"\n"
0           0 0 0 25 29 1 #"\n"
0 0 17 3 91
(4
 #";*******************************************************************"
 #"***********************"
) 0 0 25 29 1 #"\n"
0 0 17 3 11 #";;;;; B-SAT"
0 0 25 29 1 #"\n"
0 0 17 3 76
(5
 #";;La cerradura positiva es representada por + y la cerradura de Klee"
 #"ne por *"
) 0 0 25 29 1 #"\n"
0 0 17 3 56
#";; La definici\303\263n BNF para las expresiones del lenguaje:"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";;  <program>       ::= <expression>"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";;                      <a-program (exp)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";;  <expression>    ::= <numero>"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";;                      <numero (datum)>"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";;                  ::= <identificador>"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";;                      <identificador (id)>"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";;                  ::= (x16 numero+)"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";;                      <hexadecimal (datum datums)>"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";;                  ::= '<identificador>'"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";;                      <caracter (char)>"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";;                  ::= \"<identificador>\""
0 0 25 29 1 #"\n"
0 0 17 3 38 #";;                      <cadena (str)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 80
(6
 #";;                  ::= var {<identificador> = <expression>}*(,) in "
 #"<expression>"
) 0 0 25 29 1 #"\n"
0 0 17 3 50 #";;                      <var-def (ids rands body)>"
0 0 25 29 1 #"\n"
0 0 17 3 81
(7
 #";;                  ::= cons {<identificador> = <expression>}*(,) in"
 #" <expression>"
) 0 0 25 29 1 #"\n"
0 0 17 3 51 #";;                      <cons-def (ids rands body)>"
0 0 25 29 1 #"\n"
0 0 17 3 100
(8
 #";;                  ::= rec {<identificador> {identificador}*(;) = <"
 #"expression>}*(,) in <expression>"
) 0 0 25 29 1 #"\n"
0 0 17 3 65
#";;                      <rec-def (proc-names ids bodies bodyrec)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 59
#";;                  ::= <arit-prim-bin>(<numero>, <numero>)"
0 0 25 29 1 #"\n"
0 0 17 3 60
#";;                      <primapp-num-bin (prim rand1 rand2)>"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";;                  ::= <arit-prim-un>(<numero>)"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";;                      <primapp-num-un (prim rand)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 67
#";;                  ::= <hexa-prim-bin>(<expression>, <expression>)"
0 0 25 29 1 #"\n"
0 0 17 3 58
#";;                      <primapp-hex-bin (prim hex1 hex2)>"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";;                  ::= <hexa-prim-un> (<expression>)"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";;                      <primapp-hex-un (prim hex)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 67
#";;                  ::= <cad-prim-bin> (<expression> <expression>+)"
0 0 25 29 1 #"\n"
0 0 17 3 63
#";;                      <primapp-cad-bin (prim cad1 cad2 cads)>"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";;                  ::= <cad-prim-un> (<expression>)"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";;                      <primapp-cad-un (prim cad)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";;                  ::= {<expression>}*(,)"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";;                      <lista (elements)>"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";;                  ::= (vacio)"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";;                      <lista-vacia>"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";;                  ::= <list-prim-un> (<expression>)"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";;                      <primapp-list-un (prim list)>"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";;                  ::= <list-prim-gen> (<expression>)*"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";;                      <primapp-list-gen (prim args)>"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";;                  ::= <list-prim-ret> (<expression>)"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";;                      <primapp-list-ret (prim list)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";;                  ::= vector[<expression>]*(;)"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";;                      <vector (elements)>"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";;                  ::= <vector-prim-un> (<expression>)"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";;                      <primapp-vector-un (prim vector)>"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";;                  ::= <vector-prim-gen> (<expression>)*"
0 0 25 29 1 #"\n"
0 0 17 3 56 #";;                      <primapp-vector-gen (prim args)>"
0 0 25 29 1 #"\n"
0 0 17 3 70
(9
 #";;                  ::= <vector-prim-ref> (<numero> from <expression"
 #">)"
) 0 0 25 29 1 #"\n"
0 0 17 3 62
#";;                      <primapp-vector-ref (prim ref vector)>"
0 0 25 29 1 #"\n"
0 0 17 3 86
(10
 #";;                  ::= <vector-prim-set> (<numero> to <expression> "
 #"from <expression>)"
) 0 0 25 29 1 #"\n"
0 0 17 3 68
#";;                      <primapp-vector-set (prim ref value vector)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 69
(11
 #";;                  ::= registro {<identificador> = <expression>}+(;"
 #")"
) 0 0 25 29 1 #"\n"
0 0 17 3 56 #";;                      <registro (id value ids values)>"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";;                  ::= <registro-prim-un> (<expression>)"
0 0 25 29 1 #"\n"
0 0 17 3 61
#";;                      <primapp-registro-un (prim registro)>"
0 0 25 29 1 #"\n"
0 0 17 3 80
(12
 #";;                  ::= <registro-prim-gen> (<identificador> = <expr"
 #"ession>)*(,)"
) 0 0 25 29 1 #"\n"
0 0 17 3 73
(13
 #";;                      <primapp-registro-gen (prim id value ids val"
 #"ues)>"
) 0 0 25 29 1 #"\n"
0 0 17 3 79
(14
 #";;                  ::= <registro-prim-ref> (<identificador> from <e"
 #"xpression>)"
) 0 0 25 29 1 #"\n"
0 0 17 3 65
#";;                      <primapp-registro-ref (prim id registro)>"
0 0 25 29 1 #"\n"
0 0 17 3 95
(15
 #";;                  ::= <registro-prim-set> (<identificador> to <exp"
 #"ression> from <expression>)"
) 0 0 25 29 1 #"\n"
0 0 17 3 71
(16
 #";;                      <primapp-registro-set (prim id valor registr"
 #"o)>"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";;                  ::= <exp-bool>"
0 0 25 29 1 #"\n"
0 0 17 3 50 #";;                      <expresion-booleana (exp)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";;                  ::= begin {<expression>}+(;) end"
0 0 25 29 1 #"\n"
0 0 17 3 46 #";;                      <begin-exp (exp exps)>"
0 0 25 29 1 #"\n"
0 0 17 3 79
(17
 #";;                  ::= if <exp-bool> then <expression> [else <expre"
 #"ssion>] end"
) 0 0 25 29 1 #"\n"
0 0 17 3 51 #";;                      <if-exp (cond posit negat)>"
0 0 25 29 1 #"\n"
0 0 17 3 63
#";;                  ::= while <exp-bool> do (<expression>) done"
0 0 25 29 1 #"\n"
0 0 17 3 47 #";;                      <while-exp (cond body)>"
0 0 25 29 1 #"\n"
0 0 17 3 105
(18
 #";;                  ::= for <identificador> = <expression> <for-prim"
 #"> <expression> do (<expression>) done"
) 0 0 25 29 1 #"\n"
0 0 17 3 57 #";;                      <for-exp (id init prim cap body)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 59
#";;                  ::= set <identificador> -> <expression>"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";;                      <set-exp (id value)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";;                  ::= print (<expression>)"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";;                      <print-exp (exp)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 58
#";;                  ::= FNC <numero> (<clausula-or>)+(and)"
0 0 25 29 1 #"\n"
0 0 17 3 56 #";;                      <FNC-exp (nVars clause clauses)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 61
#";;                  ::= proc({<identificador>}*) <expression>"
0 0 25 29 1 #"\n"
0 0 17 3 45 #";;                      <proc-exp (ids body)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 100
(19
 #";;                  ::= procrec{<identificador> {identificador}*(;) "
 #"= <expression>}* in <expression>"
) 0 0 25 29 1 #"\n"
0 0 17 3 72
(20
 #";;                      <procrec-exp (proc-names ids body body-procr"
 #"ec)>"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";;                  ::= (<expression> {<expression>}*)"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";;                      <app-exp proc rands>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";; <clausula-or>    ::= (<numero>)+(or)"
0 0 25 29 1 #"\n"
0 0 17 3 46 #";;                      <or-clause (arg args)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 64
#";;  <exp-bool>      ::= <pred-prim> (<expression>, <expression>)"
0 0 25 29 1 #"\n"
0 0 17 3 56 #";;                      <exp-bool-pred (prim exp1 exp2)>"
0 0 25 29 1 #"\n"
0 0 17 3 64
#";;                  ::= <oper-bin-bool> (<exp-bool>, <exp-bool>)"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";;                      <exp-bool-bin (prim exp1 exp2)>"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";;                  ::= <bool>"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";;                      <booleano-simple (bool)>"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";;                  ::= <oper-un-bool> (<exp-bool>)"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";;                      <exp-bool-un (prim exp)>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";;  <bool>          ::= true | false"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";;  <list-prim-un>  ::= vacio? | lista?"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";;  <list-prim-gen> ::= crear-lista | append"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";;  <list-prim-ret> ::= cabeza | cola"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";; <vector-prim-un> ::= vector?"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";;<vector-prim-gen> ::= crear-vector"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";;<vector-prim-ref> ::= ref-vector"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";;<vector-prim-set> ::= set-vector"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 33 #";;<registro-prim-un>::= registro?"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";<registro-prim-gen>::= crear-registro"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";<registro-prim-ref>::= ref-registro"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";<registro-prim-set>::= set-registro"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";;  <for-prim>      ::= to | downto"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";;  <proc-prim>      ::= , | ,&"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";;  <pred-prim>     ::= < | > | <= | >= | == | <>"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";;  <oper-bin-bool> ::= or | and"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";;  <oper-un-bool>  ::= not"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";; <arit-prim-bin>  ::= + | - | * | / | %"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";;  <arit-prim-un>  ::= add1 | sub1"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";; <hexa-prim-bin>  ::= h.+ | h.- | h.*"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";;  <hexa-prim-un>  ::= h.add1 | h.sub1"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";;  <cad-prim-un>   ::= lenght"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";;  <cad-prim-bin>  ::= concat"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 91 4 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";Especificaci\303\263n L\303\251xica"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 31 #"scanner-spec-simple-interpreter"
0 0 25 29 1 #"\n"
0 0 22 3 1 #"'"
0 0 25 3 2 #"(("
0 0 14 3 17 #"espacio-en-blanco"
0 0 25 3 2 #" ("
0 0 14 3 10 #"whitespace"
0 0 25 3 2 #") "
0 0 14 3 4 #"skip"
0 0 25 3 1 #")"
0 0 17 3 42 #";;ignorar espacios en blanco. skip: escape"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"comentario"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 19 3 3 #"\"%\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 1 #" "
0 0 22 3 9 #"#\\newline"
0 0 25 3 4 #"))) "
0 0 14 3 4 #"skip"
0 0 25 3 1 #")"
0 0 17 3 99
(21
 #";;arbno:Cerradura de  Kleene, puede o no puede haber elementos, si h"
 #"ay una nueva linea escape(skip)"
) 0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"identificador"
0 0 25 3 2 #" ("
0 0 14 3 6 #"letter"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 4 #"))) "
0 0 14 3 6 #"symbol"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"numero"
0 0 25 3 3 #"   "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 3 #")) "
0 0 14 3 6 #"number"
0 0 25 3 1 #")"
0 0 17 3 114
(22
 #";;(arbno digit) me garantiza que haya al menos un digito, es decir a"
 #"rbno se convierte en una ceradura positiva(+) "
) 0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"numero"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 19 3 3 #"\"-\""
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 3 #")) "
0 0 14 3 6 #"number"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"numero"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 2 #") "
0 0 19 3 3 #"\".\""
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 3 #")) "
0 0 14 3 6 #"number"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"numero"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 19 3 3 #"\"-\""
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 2 #") "
0 0 19 3 3 #"\".\""
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 5 #"digit"
0 0 25 3 3 #")) "
0 0 14 3 6 #"number"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 41
#";Especificaci\303\263n Sint\303\241ctica (gram\303\241tica)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 26 #"grammar-simple-interpreter"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 57 #";;Todo lo que se escriba en el lenguaje, sera un programa"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 25 3 2 #"(("
0 0 14 3 7 #"program"
0 0 25 3 2 #" ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 9 #"a-program"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 8 #";;DATOS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 13 #"identificador"
0 0 25 3 2 #") "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 6 #"numero"
0 0 25 3 2 #") "
0 0 14 3 6 #"numero"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"x16\""
0 0 25 3 3 #"  ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 11 #"hexadecimal"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"'\""
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"'\""
0 0 25 3 2 #") "
0 0 14 3 8 #"caracter"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 4 #"\"\\\"\""
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"\\\"\""
0 0 25 3 2 #") "
0 0 14 3 6 #"cadena"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 6 #"\"true\""
0 0 25 3 2 #") "
0 0 14 3 9 #"bool-true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 7 #"\"false\""
0 0 25 3 2 #") "
0 0 14 3 10 #"bool-false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 15 #";;DEFINICIONES:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"var\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"{\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 2 #") "
0 0 19 3 3 #"\"}\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"in\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 3 #" ) "
0 0 14 3 7 #"var-def"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 6 #"\"cons\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"{\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 2 #") "
0 0 19 3 3 #"\"}\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"in\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 8 #"cons-def"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"rec\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"{\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"{\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 3 #"\";\""
0 0 25 3 2 #") "
0 0 19 3 3 #"\"}\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 2 #") "
0 0 19 3 3 #"\"}\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"in\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 7 #"rec-def"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 29 #";;APLICACIONES DE PRIMITIVAS:"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 35 #";;SOBRE NUMEROS ENTEROS Y FLOATING:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 13 #"arit-prim-bin"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 15 #"primapp-num-bin"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 12 #"arit-prim-un"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 14 #"primapp-num-un"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 30 #";;SOBRE NUMEROS HEXADECIMALES:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 18 #"hexa-prim-bin-suma"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 20 #"primapp-hex-bin-suma"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 19 #"hexa-prim-bin-resta"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 21 #"primapp-hex-bin-resta"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 28 #"hexa-prim-bin-multiplicacion"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 30 #"primapp-hex-bin-multiplicacion"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 17 #"hexa-prim-un-add1"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 19 #"primapp-hex-un-add1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 17 #"hexa-prim-un-sub1"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 19 #"primapp-hex-un-sub1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 3 #";;("
0 0 17 3 10 #"expression"
0 0 17 3 2 #" ("
0 0 17 3 12 #"hexa-prim-un"
0 0 17 3 1 #" "
0 0 17 3 3 #"\"(\""
0 0 17 3 1 #" "
0 0 17 3 10 #"expression"
0 0 17 3 21 #" \")\") primapp-hex-un)"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 16 #";;SOBRE CADENAS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 12 #"cad-prim-bin"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #")"
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 15 #"primapp-cad-bin"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 11 #"cad-prim-un"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 14 #"primapp-cad-un"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 21 #";;DATOS PREDEFINIDOS:"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 9 #";;LISTAS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"{\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\";\""
0 0 25 3 2 #") "
0 0 19 3 3 #"\"}\""
0 0 25 3 2 #") "
0 0 14 3 5 #"lista"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 27 #";;EXPRESIONES SOBRE LISTAS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 12 #"list-prim-un"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 15 #"primapp-list-un"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 9 #"\"(vacio)\""
0 0 25 3 2 #") "
0 0 14 3 11 #"lista-vacia"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 13 #"list-prim-gen"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 16 #"primapp-list-gen"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 13 #"list-prim-ret"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 16 #"primapp-list-ret"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 26 #";;PRIMITIVAS SOBRE LISTAS:"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 21 #";;PRIMITIVAS UNARIAS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 12 #"list-prim-un"
0 0 25 3 2 #" ("
0 0 19 3 8 #"\"vacio?\""
0 0 25 3 2 #") "
0 0 14 3 9 #"es-vacio?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 12 #"list-prim-un"
0 0 25 3 2 #" ("
0 0 19 3 8 #"\"lista?\""
0 0 25 3 2 #") "
0 0 14 3 9 #"es-lista?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 25 #";;PRIMITIVAS GENERADORAS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"list-prim-gen"
0 0 25 3 2 #" ("
0 0 19 3 13 #"\"crear-lista\""
0 0 25 3 2 #") "
0 0 14 3 11 #"crear-lista"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"list-prim-gen"
0 0 25 3 2 #" ("
0 0 19 3 8 #"\"append\""
0 0 25 3 2 #") "
0 0 14 3 12 #"juntar-lista"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 26 #";;PRIMITIVAS QUE RETORNAN:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"list-prim-ret"
0 0 25 3 2 #" ("
0 0 19 3 8 #"\"cabeza\""
0 0 25 3 2 #") "
0 0 14 3 10 #"ret-cabeza"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"list-prim-ret"
0 0 25 3 2 #" ("
0 0 19 3 6 #"\"cola\""
0 0 25 3 2 #") "
0 0 14 3 8 #"ret-cola"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 17 3 21 #";;DATOS PREDEFINIDOS:"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 13 #";;VECTORES:  "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 8 #"\"vector\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"[\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\";\""
0 0 25 3 2 #") "
0 0 19 3 3 #"\"]\""
0 0 25 3 2 #") "
0 0 14 3 6 #"bector"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 29 #";;EXPRESIONES SOBRE VECTORES:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 14 #"vector-prim-un"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 17 #"primapp-vector-un"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 15 #"vector-prim-gen"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"separated-list"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 18 #"primapp-vector-gen"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 15 #"vector-prim-ref"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"from\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 18 #"primapp-vector-ref"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 15 #"vector-prim-set"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"to\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"from\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 18 #"primapp-vector-set"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 21 #";;PRIMITIVAS UNARIAS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 14 #"vector-prim-un"
0 0 25 3 2 #" ("
0 0 19 3 9 #"\"vector?\""
0 0 25 3 2 #") "
0 0 14 3 10 #"es-vector?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 25 #";;PRIMITIVAS GENERADORAS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 15 #"vector-prim-gen"
0 0 25 3 2 #" ("
0 0 19 3 14 #"\"crear-vector\""
0 0 25 3 2 #") "
0 0 14 3 12 #"crear-vector"
0 0 25 3 5 #")    "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 17 #";;PRIMITIVAS ...:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 15 #"vector-prim-ref"
0 0 25 3 2 #" ("
0 0 19 3 12 #"\"ref-vector\""
0 0 25 3 2 #") "
0 0 14 3 10 #"ref-vector"
0 0 25 3 5 #")    "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 15 #"vector-prim-set"
0 0 25 3 2 #" ("
0 0 19 3 12 #"\"set-vector\""
0 0 25 3 2 #") "
0 0 14 3 10 #"set-vector"
0 0 25 3 5 #")    "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 21 #";;DATOS PREDEFINIDOS:"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 14 #";;REGISTROS:  "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 10 #"\"registro\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"{\""
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 19 3 3 #"\";\""
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 19 3 3 #"\"}\""
0 0 25 3 2 #") "
0 0 14 3 8 #"registro"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 30 #";;EXPRESIONES SOBRE REGISTROS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 16 #"registro-prim-un"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 19 #"primapp-registro-un"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 17 #"registro-prim-gen"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 20 #"primapp-registro-gen"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 17 #"registro-prim-ref"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"from\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 20 #"primapp-registro-ref"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 17 #"registro-prim-set"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"to\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"from\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 20 #"primapp-registro-set"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 21 #";;PRIMITIVAS UNARIAS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 16 #"registro-prim-un"
0 0 25 3 2 #" ("
0 0 19 3 11 #"\"registro?\""
0 0 25 3 2 #") "
0 0 14 3 12 #"es-registro?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 25 #";;PRIMITIVAS GENERADORAS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 17 #"registro-prim-gen"
0 0 25 3 2 #" ("
0 0 19 3 16 #"\"crear-registro\""
0 0 25 3 2 #") "
0 0 14 3 14 #"crear-registro"
0 0 25 3 5 #")    "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 17 #";;PRIMITIVAS ...:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 17 #"registro-prim-ref"
0 0 25 3 2 #" ("
0 0 19 3 14 #"\"ref-registro\""
0 0 25 3 2 #") "
0 0 14 3 12 #"ref-registro"
0 0 25 3 5 #")    "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 17 #"registro-prim-set"
0 0 25 3 2 #" ("
0 0 19 3 14 #"\"set-registro\""
0 0 25 3 2 #") "
0 0 14 3 12 #"set-registro"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 24 #";;EXPRESIONES BOOLEANAS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 8 #"exp-bool"
0 0 25 3 2 #") "
0 0 14 3 18 #"expresion-booleana"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"exp-bool"
0 0 25 3 2 #" ("
0 0 14 3 9 #"pred-prim"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 13 #"exp-bool-pred"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"exp-bool"
0 0 25 3 2 #" ("
0 0 14 3 13 #"oper-bin-bool"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 12 #"exp-bool-bin"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"exp-bool"
0 0 25 3 2 #" ("
0 0 14 3 12 #"oper-un-bool"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 11 #"exp-bool-un"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 24 #";;ESTRUCTURAS DE CONTROL"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 7 #"\"begin\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"{\""
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 19 3 3 #"\";\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #" )"
0 0 19 3 3 #"\"}\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"end\""
0 0 25 3 2 #") "
0 0 15 3 9 #"begin-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 4 #"\"if\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"then\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"[\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"else\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"]\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"end\""
0 0 25 3 2 #") "
0 0 14 3 6 #"if-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 7 #"\"while\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"do\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"done\""
0 0 25 3 2 #") "
0 0 14 3 9 #"while-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"for\""
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #"  "
0 0 14 3 8 #"for-prim"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"do\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"done\""
0 0 25 3 2 #") "
0 0 14 3 7 #"for-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 21 #";;VARIABLES MUTABLES:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"set\""
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"->\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 7 #"set-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 12 #";;ITERACI\303\223N"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 7 #"\"print\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 9 #"print-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 9 #"\"println\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 11 #"println-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 30 #";;SOPROTE PARA INSTANCIAS SAT:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"FNC\""
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 11 #"clausula-or"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"and\""
0 0 25 3 1 #" "
0 0 14 3 11 #"clausula-or"
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 7 #"FNC-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"clausula-or"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"(\""
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"or\""
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 2 #") "
0 0 14 3 9 #"or-clause"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 16 #";;PROCEDIMIENTOS"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 6 #"\"proc\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #")"
0 0 19 3 3 #"\")\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"{\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"}\""
0 0 25 3 2 #") "
0 0 14 3 8 #"proc-exp"
0 0 25 3 4 #")   "
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 27 #";;INVOCACION PROCEDIMIENTOS"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"[\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 25 3 1 #" "
0 0 14 3 9 #"proc-prim"
0 0 25 3 2 #") "
0 0 19 3 3 #"\"]\""
0 0 25 3 2 #") "
0 0 14 3 7 #"app-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 20 #";;AUXILIARES DE FOR:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"for-prim"
0 0 25 3 2 #" ("
0 0 19 3 4 #"\"to\""
0 0 25 3 2 #") "
0 0 14 3 5 #"for++"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 8 #"for-prim"
0 0 25 3 2 #" ("
0 0 19 3 8 #"\"downto\""
0 0 25 3 2 #") "
0 0 14 3 5 #"for--"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 20 #";;PASO DE PARAMETROS"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"proc-prim"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\",\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 5 #"valor"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"proc-prim"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\", &\""
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 2 #") "
0 0 14 3 10 #"referencia"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 23 #";;OPERADORES BOOLEANOS:"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 24 #";;OPERADORES PREDICADOS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"pred-prim"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"<\""
0 0 25 3 2 #") "
0 0 14 3 5 #"menor"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"pred-prim"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\">\""
0 0 25 3 2 #") "
0 0 14 3 5 #"mayor"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"pred-prim"
0 0 25 3 2 #" ("
0 0 19 3 4 #"\"<=\""
0 0 25 3 2 #") "
0 0 14 3 11 #"menor-igual"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"pred-prim"
0 0 25 3 2 #" ("
0 0 19 3 4 #"\">=\""
0 0 25 3 2 #") "
0 0 14 3 11 #"mayor-igual"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"pred-prim"
0 0 25 3 2 #" ("
0 0 19 3 4 #"\"==\""
0 0 25 3 2 #") "
0 0 14 3 11 #"equivalente"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 9 #"pred-prim"
0 0 25 3 2 #" ("
0 0 19 3 4 #"\"<>\""
0 0 25 3 2 #") "
0 0 14 3 9 #"diferente"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 22 #";;OPERADORES BINARIOS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"oper-bin-bool"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"and\""
0 0 25 3 2 #") "
0 0 14 3 10 #"conjuncion"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"oper-bin-bool"
0 0 25 3 2 #" ("
0 0 19 3 4 #"\"or\""
0 0 25 3 2 #") "
0 0 14 3 10 #"disyuncion"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 18 #";;OPERADOR UNARIO:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 12 #"oper-un-bool"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"not\""
0 0 25 3 2 #") "
0 0 14 3 8 #"negacion"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 25 #";;PRIMITIVAS ARITMETICAS:"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"arit-prim-bin"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"+\""
0 0 25 3 2 #") "
0 0 14 3 9 #"suma-arit"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"arit-prim-bin"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"-\""
0 0 25 3 2 #") "
0 0 14 3 10 #"resta-arit"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"arit-prim-bin"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"*\""
0 0 25 3 2 #") "
0 0 14 3 10 #"multi-arit"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"arit-prim-bin"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"/\""
0 0 25 3 2 #") "
0 0 14 3 8 #"div-arit"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"arit-prim-bin"
0 0 25 3 2 #" ("
0 0 19 3 3 #"\"%\""
0 0 25 3 2 #") "
0 0 14 3 11 #"modulo-arit"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 12 #"arit-prim-un"
0 0 25 3 2 #" ("
0 0 19 3 6 #"\"add1\""
0 0 25 3 2 #") "
0 0 14 3 9 #"incr-arit"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 12 #"arit-prim-un"
0 0 25 3 2 #" ("
0 0 19 3 6 #"\"sub1\""
0 0 25 3 2 #") "
0 0 14 3 9 #"decr-arit"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 27 #";;PRIMITIVAS HEXADECIMALES:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 18 #"hexa-prim-bin-suma"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"h.+\""
0 0 25 3 2 #") "
0 0 14 3 9 #"suma-hexa"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 19 #"hexa-prim-bin-resta"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"h.-\""
0 0 25 3 2 #") "
0 0 14 3 10 #"resta-hexa"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 28 #"hexa-prim-bin-multiplicacion"
0 0 25 3 2 #" ("
0 0 19 3 5 #"\"h.*\""
0 0 25 3 2 #") "
0 0 14 3 10 #"multi-hexa"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 17 #"hexa-prim-un-add1"
0 0 25 3 2 #" ("
0 0 19 3 8 #"\"h.add1\""
0 0 25 3 2 #") "
0 0 14 3 9 #"incr-hexa"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 17 #"hexa-prim-un-sub1"
0 0 25 3 2 #" ("
0 0 19 3 8 #"\"h.sub1\""
0 0 25 3 2 #") "
0 0 14 3 9 #"decr-hexa"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 27 #";;PRIMITIVAS SOBRE CADENAS:"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"cad-prim-un"
0 0 25 3 2 #" ("
0 0 19 3 8 #"\"length\""
0 0 25 3 2 #") "
0 0 14 3 8 #"longitud"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 12 #"cad-prim-bin"
0 0 25 3 2 #" ("
0 0 19 3 8 #"\"concat\""
0 0 25 3 2 #") "
0 0 14 3 10 #"concatenar"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";Construidos autom\303\241ticamente:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 28 #"sllgen:make-define-datatypes"
0 0 25 3 1 #" "
0 0 14 3 31 #"scanner-spec-simple-interpreter"
0 0 25 3 1 #" "
0 0 14 3 26 #"grammar-simple-interpreter"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"show-the-datatypes"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 5 #" () ("
0 0 14 3 28 #"sllgen:list-define-datatypes"
0 0 25 3 1 #" "
0 0 14 3 31 #"scanner-spec-simple-interpreter"
0 0 25 3 1 #" "
0 0 14 3 26 #"grammar-simple-interpreter"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 92
(23
 #";*******************************************************************"
 #"************************"
) 0 0 25 29 1 #"\n"
0 0 17 3 26 #";Parser, Scanner, Interfaz"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 76
(24
 #";El FrontEnd (An\303\241lisis l\303\251xico (scanner) y sint\303\241"
 #"ctico (parser) integrados)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"scan&parse"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 25 #"sllgen:make-string-parser"
0 0 25 3 1 #" "
0 0 14 3 31 #"scanner-spec-simple-interpreter"
0 0 25 3 1 #" "
0 0 14 3 26 #"grammar-simple-interpreter"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";El Analizador L\303\251xico (Scanner)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"just-scan"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 26 #"sllgen:make-string-scanner"
0 0 25 3 1 #" "
0 0 14 3 31 #"scanner-spec-simple-interpreter"
0 0 25 3 1 #" "
0 0 14 3 26 #"grammar-simple-interpreter"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 65
(25
 #";El Interpretador (FrontEnd + Evaluaci\303\263n + se\303\261al para "
 #"lectura )"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"interpretador"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 20 #"sllgen:make-rep-loop"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"--> \""
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"pgm"
0 0 25 3 3 #") ("
0 0 14 3 12 #"eval-program"
0 0 25 3 2 #"  "
0 0 14 3 3 #"pgm"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 25 #"sllgen:make-stream-parser"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 31 #"scanner-spec-simple-interpreter"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 26 #"grammar-simple-interpreter"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 92 23 0 0 25 29 1 #"\n"
0 0 17 3 14 #";El Interprete"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";eval-program: <programa> -> numero"
0 0 25 29 1 #"\n"
0 0 17 3 106
(26
 #"; funci\303\263n que eval\303\272a un programa teniendo en cuenta un"
 #" ambiente dado (se inicializa dentro del programa)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"eval-program"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"pgm"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 7 #"program"
0 0 25 3 1 #" "
0 0 14 3 3 #"pgm"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"a-program"
0 0 25 3 2 #" ("
0 0 14 3 4 #"body"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 2 #" ("
0 0 14 3 8 #"init-env"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 18 #"; Ambiente inicial"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"init-env"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" ()"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"extend-env"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"v"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 9 #"empty-env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";eval-expression: <expression> <enviroment> -> numero"
0 0 25 29 1 #"\n"
0 0 17 3 48 #"; evalua la expresi\303\263n en el ambiente de entrada"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"eval-expression"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 13 #"identificador"
0 0 25 3 2 #" ("
0 0 14 3 2 #"id"
0 0 25 3 3 #") ("
0 0 14 3 9 #"apply-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 8 #"caracter"
0 0 25 3 2 #" ("
0 0 14 3 4 #"char"
0 0 25 3 2 #") "
0 0 14 3 4 #"char"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"numero"
0 0 25 3 2 #" ("
0 0 14 3 6 #"numero"
0 0 25 3 2 #") "
0 0 14 3 6 #"numero"
0 0 25 3 8 #")       "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"cadena"
0 0 25 3 2 #" ("
0 0 14 3 3 #"str"
0 0 25 3 3 #") ("
0 0 14 3 14 #"symbol->string"
0 0 25 3 1 #" "
0 0 14 3 3 #"str"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 11 #"hexadecimal"
0 0 25 3 2 #" ("
0 0 14 3 11 #"hexadecimal"
0 0 25 3 2 #") "
0 0 14 3 11 #"hexadecimal"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 20 #"primapp-hex-bin-suma"
0 0 25 3 2 #" ("
0 0 14 3 3 #"pri"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex2"
0 0 25 3 4 #")  ("
0 0 14 3 9 #"sumar-hex"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 21 #"primapp-hex-bin-resta"
0 0 25 3 2 #" ("
0 0 14 3 3 #"pri"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex2"
0 0 25 3 4 #")  ("
0 0 14 3 10 #"restar-hex"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 30 #"primapp-hex-bin-multiplicacion"
0 0 25 3 2 #" ("
0 0 14 3 3 #"pri"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex2"
0 0 25 3 4 #")  ("
0 0 14 3 15 #"multiplicar-hex"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 19 #"primapp-hex-un-add1"
0 0 25 3 2 #" ("
0 0 14 3 3 #"pri"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 4 #")  ("
0 0 14 3 8 #"add1-hex"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 19 #"primapp-hex-un-sub1"
0 0 25 3 2 #" ("
0 0 14 3 3 #"pri"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 4 #")  ("
0 0 14 3 8 #"sub1-hex"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 9 #"bool-true"
0 0 25 3 4 #" () "
0 0 22 3 5 #"#true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 10 #"bool-false"
0 0 25 3 4 #" () "
0 0 22 3 6 #"#false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 18 #"expresion-booleana"
0 0 25 3 2 #" ("
0 0 14 3 8 #"exp-bool"
0 0 25 3 3 #") ("
0 0 14 3 16 #"evaluar-exp-bool"
0 0 25 3 1 #" "
0 0 14 3 8 #"exp-bool"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 5 #"lista"
0 0 25 3 2 #" ("
0 0 14 3 8 #"elements"
0 0 25 3 3 #") ("
0 0 14 3 10 #"eval-rands"
0 0 25 3 1 #" "
0 0 14 3 8 #"elements"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"bector"
0 0 25 3 2 #" ("
0 0 14 3 8 #"elements"
0 0 25 3 3 #") ("
0 0 14 3 12 #"list->vector"
0 0 25 3 2 #" ("
0 0 14 3 10 #"eval-rands"
0 0 25 3 1 #" "
0 0 14 3 8 #"elements"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 8 #"registro"
0 0 25 3 2 #" ("
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 5 #"value"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 6 #"values"
0 0 25 3 3 #") ("
0 0 14 3 13 #"unparse-rgstr"
0 0 25 3 2 #" ("
0 0 14 3 5 #"rgstr"
0 0 25 3 2 #" ("
0 0 14 3 14 #"pasar-a-vector"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 3 #") ("
0 0 14 3 14 #"pasar-a-vector"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 5 #"value"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 10 #"eval-rands"
0 0 25 3 1 #" "
0 0 14 3 6 #"values"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 15 #"primapp-cad-bin"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"cad1"
0 0 25 3 1 #" "
0 0 14 3 4 #"cad2"
0 0 25 3 1 #" "
0 0 14 3 4 #"cads"
0 0 25 3 3 #") ("
0 0 14 3 18 #"apply-prim-cad-bin"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 2 #" ("
0 0 14 3 15 #"fusionar-listas"
0 0 25 3 1 #" "
0 0 14 3 4 #"cad1"
0 0 25 3 1 #" "
0 0 14 3 4 #"cad2"
0 0 25 3 1 #" "
0 0 14 3 4 #"cads"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 14 #"primapp-cad-un"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 3 #"cad"
0 0 25 3 3 #") ("
0 0 14 3 17 #"apply-prim-cad-un"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 2 #" ("
0 0 14 3 9 #"eval-rand"
0 0 25 3 1 #" "
0 0 14 3 3 #"cad"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 15 #"primapp-num-bin"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand1"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 14 #"apply-prim-num"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 14 #"primapp-num-un"
0 0 25 3 2 #" ("
0 0 14 3 6 #"unprim"
0 0 25 3 1 #" "
0 0 14 3 4 #"rand"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 17 #"apply-prim-num-un"
0 0 25 3 1 #" "
0 0 14 3 6 #"unprim"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"rand"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 11 #"lista-vacia"
0 0 25 3 4 #" () "
0 0 14 3 5 #"empty"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 15 #"primapp-list-un"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 3 #") ("
0 0 14 3 18 #"apply-prim-un-list"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 16 #"primapp-list-gen"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 3 #") ("
0 0 14 3 19 #"apply-prim-gen-list"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 2 #" ("
0 0 14 3 10 #"eval-rands"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 16 #"primapp-list-ret"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 3 #") ("
0 0 14 3 19 #"apply-prim-ret-list"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 17 #"primapp-vector-un"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 6 #"vector"
0 0 25 3 3 #") ("
0 0 14 3 17 #"apply-prim-un-vec"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 6 #"vector"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 18 #"primapp-vector-gen"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 3 #") ("
0 0 14 3 18 #"apply-prim-gen-vec"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 2 #" ("
0 0 14 3 10 #"eval-rands"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 18 #"primapp-vector-ref"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 3 #"ref"
0 0 25 3 1 #" "
0 0 14 3 6 #"vector"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 7 #"vector?"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 6 #"vector"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #")) ("
0 0 14 3 18 #"apply-prim-ref-vec"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 3 #"ref"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 6 #"vector"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 49 #"\"Error, la funcion ref-vector esperaba un vector\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 18 #"primapp-vector-set"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 3 #"ref"
0 0 25 3 1 #" "
0 0 14 3 5 #"value"
0 0 25 3 1 #" "
0 0 14 3 6 #"vector"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 7 #"vector?"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 6 #"vector"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #")) ("
0 0 14 3 18 #"apply-prim-set-vec"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 3 #"ref"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 5 #"value"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 6 #"vector"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 49 #"\"Error, la funcion set-vector esperaba un vector\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 19 #"primapp-registro-un"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 8 #"registro"
0 0 25 3 3 #") ("
0 0 14 3 17 #"apply-prim-un-reg"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 8 #"registro"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 20 #"primapp-registro-gen"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 5 #"value"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 6 #"values"
0 0 25 3 3 #") ("
0 0 14 3 13 #"unparse-rgstr"
0 0 25 3 2 #" ("
0 0 14 3 5 #"rgstr"
0 0 25 3 2 #" ("
0 0 14 3 14 #"pasar-a-vector"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 3 #") ("
0 0 14 3 14 #"pasar-a-vector"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 5 #"value"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 10 #"eval-rands"
0 0 25 3 1 #" "
0 0 14 3 6 #"values"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 20 #"primapp-registro-ref"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 8 #"registro"
0 0 25 3 3 #") ("
0 0 14 3 18 #"apply-prim-ref-reg"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 2 #" ("
0 0 14 3 11 #"parse-rgstr"
0 0 25 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 8 #"registro"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 20 #"primapp-registro-set"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 5 #"valor"
0 0 25 3 1 #" "
0 0 14 3 8 #"registro"
0 0 25 3 3 #") ("
0 0 14 3 18 #"apply-prim-set-reg"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 5 #"valor"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 11 #"parse-rgstr"
0 0 25 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 8 #"registro"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 7 #"var-def"
0 0 25 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 5 #"rands"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 3 #") ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"args"
0 0 25 3 2 #" ("
0 0 14 3 10 #"eval-rands"
0 0 25 3 1 #" "
0 0 14 3 5 #"rands"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 29 1 #"\n"
0 0 25 3 51 #"                                                  ("
0 0 14 3 10 #"extend-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"if-exp"
0 0 25 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 25 3 1 #" "
0 0 14 3 5 #"posit"
0 0 25 3 1 #" "
0 0 14 3 5 #"negat"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 1 #"("
0 0 14 3 8 #"boolean?"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 15 3 4 #"cond"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 2 #"if"
0 0 25 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 15 3 4 #"cond"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 5 #"posit"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 5 #"negat"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 2 #"if"
0 0 19 3 1 #" "
0 0 19 3 8 #"esperaba"
0 0 19 3 1 #" "
0 0 19 3 2 #"un"
0 0 19 3 1 #" "
0 0 19 3 8 #"booleano"
0 0 19 3 1 #" "
0 0 19 3 4 #"como"
0 0 19 3 11 #" condicion\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 9 #"begin-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 15 3 3 #"let"
0 0 25 3 1 #" "
0 0 14 3 4 #"loop"
0 0 25 3 3 #" (("
0 0 14 3 3 #"acc"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                      "
0 0 14 3 3 #"acc"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 4 #"loop"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                             "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 9 #"while-exp"
0 0 25 3 2 #" ("
0 0 14 3 5 #"condi"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 1 #"("
0 0 14 3 8 #"boolean?"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 5 #"condi"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 11 #"ciclo-while"
0 0 25 3 1 #" "
0 0 14 3 5 #"condi"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 5 #"while"
0 0 19 3 1 #" "
0 0 19 3 8 #"esperaba"
0 0 19 3 1 #" "
0 0 19 3 2 #"un"
0 0 19 3 1 #" "
0 0 19 3 8 #"booleano"
0 0 19 3 1 #" "
0 0 19 3 4 #"como"
0 0 19 3 11 #" condicion\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 7 #"for-exp"
0 0 25 3 2 #" ("
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 4 #"init"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 3 #"cap"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"init"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #")) ("
0 0 14 3 7 #"number?"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 3 #"cap"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 48 #"                                               ("
0 0 14 3 9 #"ciclo-for"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 3 #"cap"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #") "
0 0 14 3 4 #"body"
0 0 25 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"init"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")) "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 43 #"                                          ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 6 #"revise"
0 0 19 3 1 #" "
0 0 19 3 3 #"los"
0 0 19 3 1 #" "
0 0 19 3 7 #"valores"
0 0 19 3 1 #" "
0 0 19 3 4 #"tope"
0 0 19 3 1 #" "
0 0 19 3 1 #"e"
0 0 19 3 1 #" "
0 0 19 3 7 #"inicial"
0 0 19 3 1 #" "
0 0 19 3 3 #"del"
0 0 19 3 1 #" "
0 0 19 3 5 #"ciclo"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 5 #"deben"
0 0 19 3 1 #" "
0 0 19 3 3 #"ser"
0 0 19 3 9 #" numeros\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 9 #"print-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 25 3 3 #") ("
0 0 14 3 7 #"display"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 11 #"println-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 25 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 7 #"display"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 7 #"default"
0 0 25 3 2 #" ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 9 #"expresion"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 12 #"implementada"
0 0 19 3 1 #" "
0 0 19 3 13 #"aun.\\nEstamos"
0 0 19 3 1 #" "
0 0 19 3 10 #"trabajando"
0 0 19 3 1 #" "
0 0 19 3 2 #"en"
0 0 19 3 1 #" "
0 0 19 3 5 #"ello!"
0 0 19 3 1 #" "
0 0 19 3 3 #":)\""
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 98
(27
 #";;********************************************BIGNUM****************"
 #"******************************"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 79
(28
 #";;Bignum: -\302\277Que hace?:Permite repesentar numeros y hacer oper"
 #"aciones con ellos"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"sumar-hex"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"suma"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 6 #"())) ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex2"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"())))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"add1-hex"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"hex1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"suma"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"())) "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"suma"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 8 #"is-zero?"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 14 3 1 #"y"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 9 #"successor"
0 0 25 3 2 #" ("
0 0 14 3 4 #"suma"
0 0 25 3 2 #" ("
0 0 14 3 11 #"predecessor"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 14 3 1 #"y"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"restar-hex"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 5 #"resta"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 6 #"())) ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex2"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"())))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"sub1-hex"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"hex1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 5 #"resta"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"())) "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"resta"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 8 #"is-zero?"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 14 3 1 #"x"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"predecessor"
0 0 25 3 2 #" ("
0 0 14 3 5 #"resta"
0 0 25 3 2 #"  "
0 0 14 3 1 #"x"
0 0 25 3 2 #" ("
0 0 14 3 11 #"predecessor"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 14 #"multiplicacion"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 8 #"is-zero?"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 14 3 4 #"zero"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"suma"
0 0 25 3 2 #" ("
0 0 14 3 14 #"multiplicacion"
0 0 25 3 2 #" ("
0 0 14 3 11 #"predecessor"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 14 3 1 #"y"
0 0 25 3 2 #") "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"multiplicar-hex"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 14 #"multiplicacion"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 6 #"())) ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"hex2"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"())))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 16 #";;Constante base"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"base"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"zero"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 56
#";;is-zero?: -\302\277Que hace?: Verificar si un numero es cero"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"is-zero?"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 6 #"numero"
0 0 25 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 60
#";;successor: -\302\277Que hace?: Adicionar una unidad a un numero."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"successor"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 6 #"numero"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 5 #"     "
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      [("
0 0 14 3 8 #"is-zero?"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 7 #")]     "
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      [("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 4 #"base"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 9 #"successor"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      )"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 59
#";;predecessor: -\302\277Que hace?: Restar una unidad a un numero."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"predecessor"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 6 #"numero"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 5 #"     "
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      [("
0 0 14 3 8 #"is-zero?"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 3 #") ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"no hay predecesor de cero\""
0 0 25 3 7 #")]     "
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      [("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 2 #" ("
0 0 14 3 9 #"successor"
0 0 25 3 1 #" "
0 0 14 3 4 #"zero"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 7 #"()]    "
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      [("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 4 #"base"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 11 #"predecessor"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      )"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 90
(29
 #";*******************************************************************"
 #"**********************"
) 0 0 25 29 1 #"\n"
0 0 17 3 75
(30
 #"; funciones auxiliares para aplicar eval-expression a cada elemento "
 #"de una "
) 0 0 25 29 1 #"\n"
0 0 17 3 34 #"; lista de operandos (expresiones)"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"eval-rands"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 5 #"rands"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 9 #"eval-rand"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")) "
0 0 14 3 5 #"rands"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"eval-rand"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rand"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"rand"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"fusionar-listas"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 2 #"l1"
0 0 25 3 1 #" "
0 0 14 3 2 #"l2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"null?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"eval-rands"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"eval-rand"
0 0 25 3 1 #" "
0 0 14 3 2 #"l1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 9 #"eval-rand"
0 0 25 3 1 #" "
0 0 14 3 2 #"l2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"eval-rand"
0 0 25 3 1 #" "
0 0 14 3 2 #"l1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 9 #"eval-rand"
0 0 25 3 1 #" "
0 0 14 3 2 #"l2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"eval-rands"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 6 #"))])))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 91 4 0 0 25 29 1 #"\n"
0 0 17 3 34 #";Funciones auxiliares para listas:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"apply-prim-un-list"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 12 #"list-prim-un"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"es-vacio?"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 3 #") ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 9 #"es-vacio?"
0 0 19 3 1 #" "
0 0 19 3 8 #"esperaba"
0 0 19 3 1 #" "
0 0 19 3 3 #"una"
0 0 19 3 7 #" lista\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"es-lista?"
0 0 25 3 5 #" () ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 19 #"apply-prim-gen-list"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 13 #"list-prim-gen"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"crear-lista"
0 0 25 3 4 #" () "
0 0 14 3 4 #"args"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 12 #"juntar-lista"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 1 #"("
0 0 14 3 14 #"validar-listas"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 3 #") ("
0 0 14 3 13 #"juntar-listas"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 3 #") ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 6 #"append"
0 0 19 3 1 #" "
0 0 19 3 8 #"esperaba"
0 0 19 3 1 #" "
0 0 19 3 6 #"listas"
0 0 19 3 1 #" "
0 0 19 3 4 #"como"
0 0 19 3 12 #" argumentos\""
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 14 #"validar-listas"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 3 #"not"
0 0 25 3 1 #"("
0 0 14 3 5 #"list?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #" ("
0 0 14 3 14 #"validar-listas"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 7 #")))])))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"juntar-listas"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 3 #") ("
0 0 14 3 13 #"juntar-listas"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 7 #")))])))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 19 #"apply-prim-ret-list"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 13 #"list-prim-ret"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"ret-cabeza"
0 0 25 3 5 #" () ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 3 #"not"
0 0 25 3 1 #"("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 2 #"se"
0 0 19 3 1 #" "
0 0 19 3 5 #"puede"
0 0 19 3 1 #" "
0 0 19 3 7 #"obtener"
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 6 #"cabeza"
0 0 19 3 1 #" "
0 0 19 3 2 #"de"
0 0 19 3 1 #" "
0 0 19 3 4 #"algo"
0 0 19 3 1 #" "
0 0 19 3 3 #"que"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 2 #"es"
0 0 19 3 7 #" lista\""
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                           [("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 3 #") ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 2 #"se"
0 0 19 3 1 #" "
0 0 19 3 5 #"puede"
0 0 19 3 1 #" "
0 0 19 3 7 #"obtener"
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 6 #"cabeza"
0 0 19 3 1 #" "
0 0 19 3 2 #"de"
0 0 19 3 1 #" "
0 0 19 3 3 #"una"
0 0 19 3 1 #" "
0 0 19 3 5 #"lista"
0 0 19 3 7 #" vacia\""
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 8 #"ret-cola"
0 0 25 3 5 #" () ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 3 #"not"
0 0 25 3 1 #"("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 2 #"se"
0 0 19 3 1 #" "
0 0 19 3 5 #"puede"
0 0 19 3 1 #" "
0 0 19 3 7 #"obtener"
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 4 #"cola"
0 0 19 3 1 #" "
0 0 19 3 2 #"de"
0 0 19 3 1 #" "
0 0 19 3 4 #"algo"
0 0 19 3 1 #" "
0 0 19 3 3 #"que"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 2 #"es"
0 0 19 3 7 #" lista\""
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                           [("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 3 #") ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 2 #"se"
0 0 19 3 1 #" "
0 0 19 3 5 #"puede"
0 0 19 3 1 #" "
0 0 19 3 7 #"obtener"
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 4 #"cola"
0 0 19 3 1 #" "
0 0 19 3 2 #"de"
0 0 19 3 1 #" "
0 0 19 3 3 #"una"
0 0 19 3 1 #" "
0 0 19 3 5 #"lista"
0 0 19 3 7 #" vacia\""
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 7 #")])))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 91 4 0 0 25 29 1 #"\n"
0 0 17 3 36 #";Funciones auxiliares para vectores:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 17 #"apply-prim-un-vec"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 3 #"vec"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 14 #"vector-prim-un"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"es-vector?"
0 0 25 3 5 #" () ("
0 0 14 3 7 #"vector?"
0 0 25 3 1 #" "
0 0 14 3 3 #"vec"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"      )))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"apply-prim-gen-vec"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 15 #"vector-prim-gen"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 12 #"crear-vector"
0 0 25 3 5 #" () ("
0 0 14 3 12 #"list->vector"
0 0 25 3 1 #" "
0 0 14 3 4 #"args"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"apply-prim-ref-vec"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 3 #"ref"
0 0 25 3 1 #" "
0 0 14 3 3 #"vec"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 15 #"vector-prim-ref"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"ref-vector"
0 0 25 3 5 #" () ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 3 #"vec"
0 0 25 3 1 #" "
0 0 14 3 3 #"ref"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"      )))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"apply-prim-set-vec"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 3 #"ref"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 1 #" "
0 0 14 3 3 #"vec"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 15 #"vector-prim-set"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"set-vector"
0 0 25 3 5 #" () ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 1 #" "
0 0 14 3 3 #"vec"
0 0 25 3 1 #" "
0 0 14 3 3 #"ref"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"      )))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 91 4 0 0 25 29 1 #"\n"
0 0 17 3 37 #";Funciones auxiliares para registros:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 14 #"pasar-a-vector"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"solo"
0 0 25 3 1 #" "
0 0 14 3 3 #"lis"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 12 #"list->vector"
0 0 25 3 2 #" ("
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 4 #"solo"
0 0 25 3 2 #") "
0 0 14 3 3 #"lis"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 17 #"apply-prim-un-reg"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 3 #") ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 16 #"registro-prim-un"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 12 #"es-registro?"
0 0 25 3 5 #" () ("
0 0 14 3 9 #"register?"
0 0 25 3 2 #" ("
0 0 14 3 11 #"parse-rgstr"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      ) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"apply-prim-ref-reg"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 17 #"registro-prim-ref"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 12 #"ref-registro"
0 0 25 3 5 #" () ("
0 0 14 3 9 #"rgstr-ref"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"      )))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"apply-prim-set-reg"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 17 #"registro-prim-set"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 12 #"set-registro"
0 0 25 3 5 #" () ("
0 0 15 3 5 #"begin"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rgstr-set!"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 3 #") ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 19 3 52 #"\"Se necesitan estados para que funcione de verdad!!\""
0 0 25 3 4 #") ))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"      )))"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";definici\303\263n del tipo de dato registro"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 25 3 1 #" "
0 0 14 3 8 #"register"
0 0 25 3 1 #" "
0 0 14 3 9 #"register?"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"rgstr"
0 0 25 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 7 #"vector?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 4 #"vals"
0 0 25 3 1 #" "
0 0 14 3 7 #"vector?"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"unparse-rgstr"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"reg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 8 #"register"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"rgstr"
0 0 25 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 3 #") ("
0 0 14 3 13 #"con-list-vect"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"parse-rgstr"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"reg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"con-vect-list"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"con-vect-list"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"reg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"letrec"
0 0 25 3 2 #" ("
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 6 #"tamlis"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 5 #"vecID"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-vector"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 6 #"vecVAL"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-vector"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 9 #"convertir"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 2 #"ac"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 6 #"tamlis"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 5 #") ) ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 46 #"                                             ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 1 #" "
0 0 14 3 5 #"vecID"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 46 #"                                             ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 1 #" "
0 0 14 3 6 #"vecVAL"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 1 #" "
0 0 14 3 5 #"vecID"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 1 #" "
0 0 14 3 6 #"vecVAL"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"caddr"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 9 #"convertir"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 7 #")))])))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             )"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 5 #"begin"
0 0 25 3 2 #" ("
0 0 14 3 9 #"convertir"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 5 #"rgstr"
0 0 25 3 1 #" "
0 0 14 3 5 #"vecID"
0 0 25 3 1 #" "
0 0 14 3 6 #"vecVAL"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"con-list-vect"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"letrec"
0 0 25 3 2 #" ("
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 9 #"convertir"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 2 #"ac"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                      [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 4 #")) ("
0 0 14 3 9 #"convertir"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 6 #"))])))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             )"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"convertir"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"rgstr-ref"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"reg"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 8 #"register"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"rgstr"
0 0 25 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 3 #") ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 2 #" ("
0 0 14 3 16 #"get-index-of-ids"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"get-index-of-ids"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"letrec"
0 0 25 3 2 #" ("
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 6 #"buscar"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 2 #"se"
0 0 19 3 1 #" "
0 0 19 3 2 #"ha"
0 0 19 3 1 #" "
0 0 19 3 10 #"encontrado"
0 0 19 3 1 #" "
0 0 19 3 5 #"valor"
0 0 19 3 1 #" "
0 0 19 3 2 #"en"
0 0 19 3 1 #" "
0 0 19 3 2 #"el"
0 0 19 3 10 #" registro\""
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                      [("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 3 #")) "
0 0 14 3 2 #"ac"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"buscar"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 2 #"ac"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 6 #"))])))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             )"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"buscar"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"rgstr-set!"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"reg"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 8 #"register"
0 0 25 3 1 #" "
0 0 14 3 3 #"reg"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"rgstr"
0 0 25 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 3 #") ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 2 #" ("
0 0 14 3 16 #"get-index-of-ids"
0 0 25 3 1 #" "
0 0 14 3 3 #"ids"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 2 #") "
0 0 14 3 3 #"val"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 91 4 0 0 25 29 1 #"\n"
0 0 17 3 37 #";Funciones auxiliares para booleanos:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"evaluar-exp-bool"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 8 #"exp-bool"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 13 #"exp-bool-pred"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 3 #") ("
0 0 14 3 20 #"apply-prim-bool-pred"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 12 #"exp-bool-bin"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 3 #") ("
0 0 14 3 19 #"apply-prim-bool-bin"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #") ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"exp-bool-un"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 3 #") ("
0 0 14 3 18 #"apply-prim-bool-un"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 20 #"apply-prim-bool-pred"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 9 #"pred-prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"menor"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 1 #"("
0 0 14 3 3 #"and"
0 0 25 3 1 #"("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 3 #") ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 3 #"))("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 2 #")("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 5 #"menor"
0 0 19 3 1 #" "
0 0 19 3 8 #"esperaba"
0 0 19 3 1 #" "
0 0 19 3 2 #"un"
0 0 19 3 8 #" numero\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"mayor"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 1 #"("
0 0 14 3 3 #"and"
0 0 25 3 1 #"("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 3 #") ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 3 #"))("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 2 #")("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 5 #"mayor"
0 0 19 3 1 #" "
0 0 19 3 8 #"esperaba"
0 0 19 3 1 #" "
0 0 19 3 2 #"un"
0 0 19 3 8 #" numero\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"menor-igual"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 1 #"("
0 0 14 3 3 #"and"
0 0 25 3 1 #"("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 3 #") ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 3 #"))("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 2 #")("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 11 #"menor-igual"
0 0 19 3 1 #" "
0 0 19 3 9 #"esperaba "
0 0 19 3 2 #"un"
0 0 19 3 8 #" numero\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"mayor-igual"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 1 #"("
0 0 14 3 3 #"and"
0 0 25 3 1 #"("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 3 #") ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 3 #"))("
0 0 14 3 2 #">="
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 2 #")("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 11 #"mayor-igual"
0 0 19 3 1 #" "
0 0 19 3 8 #"esperaba"
0 0 19 3 1 #" "
0 0 19 3 2 #"un"
0 0 19 3 8 #" numero\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"equivalente"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 1 #"("
0 0 14 3 3 #"and"
0 0 25 3 1 #"("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 3 #") ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 3 #"))("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 2 #")("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 11 #"equivalente"
0 0 19 3 1 #" "
0 0 19 3 8 #"esperaba"
0 0 19 3 1 #" "
0 0 19 3 2 #"un"
0 0 19 3 8 #" numero\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"diferente"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 1 #"("
0 0 14 3 3 #"and"
0 0 25 3 1 #"("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 3 #") ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 3 #"))("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 3 #"))("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 8 #"negacion"
0 0 19 3 1 #" "
0 0 19 3 8 #"esperaba"
0 0 19 3 1 #" "
0 0 19 3 2 #"un"
0 0 19 3 8 #" numero\""
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 19 #"apply-prim-bool-bin"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 13 #"oper-bin-bool"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"conjuncion"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 1 #"("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 3 #") ("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 3 #"))("
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 2 #")("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 2 #"  "
0 0 19 3 10 #"conjuncion"
0 0 19 3 1 #" "
0 0 19 3 8 #"esperaba"
0 0 19 3 1 #" "
0 0 19 3 2 #"un"
0 0 19 3 10 #" booleano\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"disyuncion"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 1 #"("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 3 #") ("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 3 #"))("
0 0 14 3 2 #"or"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 2 #")("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 2 #"  "
0 0 19 3 10 #"disyuncion"
0 0 19 3 1 #" "
0 0 19 3 8 #"esperaba"
0 0 19 3 1 #" "
0 0 19 3 2 #"un"
0 0 19 3 10 #" booleano\""
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"apply-prim-bool-un"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 12 #"oper-un-bool"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 8 #"negacion"
0 0 25 3 5 #" () ("
0 0 14 3 3 #"not"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 91 4 0 0 25 29 1 #"\n"
0 0 17 3 35 #";Funciones auxiliares para cadenas:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"apply-prim-cad-bin"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"cads"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 12 #"cad-prim-bin"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"concatenar"
0 0 25 3 5 #" () ("
0 0 14 3 18 #"concatenar-cadenas"
0 0 25 3 1 #" "
0 0 14 3 4 #"cads"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"concatenar-cadenas"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cads"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 4 #"cads"
0 0 25 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 7 #"string?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"cads"
0 0 25 3 4 #")) ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"cads"
0 0 25 3 3 #") ("
0 0 14 3 18 #"concatenar-cadenas"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"cads"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 10 #"concatenar"
0 0 19 3 1 #" "
0 0 19 3 4 #"solo"
0 0 19 3 1 #" "
0 0 19 3 8 #"funciona"
0 0 19 3 1 #" "
0 0 19 3 3 #"con"
0 0 19 3 9 #" cadenas\""
0 0 25 3 5 #")])))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 17 #"apply-prim-cad-un"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 3 #"cad"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 11 #"cad-prim-un"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 8 #"longitud"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 3 #"cad"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-length"
0 0 25 3 1 #" "
0 0 14 3 3 #"cad"
0 0 25 3 3 #") ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 8 #"longitud"
0 0 19 3 1 #" "
0 0 19 3 8 #"esperaba"
0 0 19 3 1 #" "
0 0 19 3 3 #"una"
0 0 19 3 8 #" cadena\""
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 91 4 0 0 25 29 1 #"\n"
0 0 17 3 50 #";Funciones auxiliares para estructuras de control:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"ciclo-while"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 5 #"condi"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 5 #"condi"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")) "
0 0 19 3 5 #"\"end\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 11 #"ciclo-while"
0 0 25 3 1 #" "
0 0 14 3 5 #"condi"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 6 #"))])))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"ciclo-for"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"tope"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 8 #"for-prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"for++"
0 0 25 3 5 #" () ("
0 0 14 3 11 #"ciclo-for++"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 4 #"tope"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"for--"
0 0 25 3 5 #" () ("
0 0 14 3 11 #"ciclo-for--"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 4 #"tope"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"ciclo-for++"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"cap"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"letrec"
0 0 25 3 2 #" ("
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 6 #"iterar"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"cap"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 2 #">="
0 0 25 3 2 #" ("
0 0 14 3 9 #"apply-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 2 #") "
0 0 14 3 3 #"cap"
0 0 25 3 2 #") "
0 0 19 3 5 #"\"end\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 6 #"iterar"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"cap"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 9 #"apply-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                          )]"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                  ))))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"iterar"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"cap"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"ciclo-for--"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"cap"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"letrec"
0 0 25 3 2 #" ("
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 6 #"iterar"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"cap"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 9 #"apply-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 2 #") "
0 0 14 3 3 #"cap"
0 0 25 3 2 #") "
0 0 19 3 5 #"\"end\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 15 3 5 #"begin"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 15 #"eval-expression"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 6 #"iterar"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"cap"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 9 #"apply-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                          )]"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                  ))))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"iterar"
0 0 25 3 1 #" "
0 0 14 3 2 #"id"
0 0 25 3 1 #" "
0 0 14 3 3 #"cap"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    ))"
0 0 25 29 1 #"\n"
0 0 17 3 92 23 0 0 25 29 1 #"\n"
0 0 17 3 29 #";Funciones primitivas numeros"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 14 #"apply-prim-num"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand1"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 13 #"arit-prim-bin"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"suma-arit"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 14 #"apply-prim-num"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 4 #"suma"
0 0 19 3 1 #" "
0 0 19 3 6 #"espera"
0 0 19 3 1 #" "
0 0 19 3 3 #"dos"
0 0 19 3 11 #" operandos\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand1"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"resta-arit"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 14 #"apply-prim-num"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                         "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 5 #"resta"
0 0 19 3 1 #" "
0 0 19 3 6 #"espera"
0 0 19 3 1 #" "
0 0 19 3 3 #"dos"
0 0 19 3 11 #" operandos\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand1"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"multi-arit"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 14 #"apply-prim-num"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                    "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 14 #"multiplicacion"
0 0 19 3 1 #" "
0 0 19 3 6 #"espera"
0 0 19 3 1 #" "
0 0 19 3 3 #"dos"
0 0 19 3 11 #" operandos\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand1"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 8 #"div-arit"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 14 #"apply-prim-num"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 8 #"division"
0 0 19 3 1 #" "
0 0 19 3 6 #"espera"
0 0 19 3 1 #" "
0 0 19 3 3 #"dos"
0 0 19 3 11 #" operandos\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand1"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"modulo-arit"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 14 #"apply-prim-num"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 6 #"modulo"
0 0 19 3 1 #" "
0 0 19 3 6 #"espera"
0 0 19 3 1 #" "
0 0 19 3 3 #"dos"
0 0 19 3 11 #" operandos\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 9 #"remainder"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand1"
0 0 25 3 1 #" "
0 0 14 3 5 #"rand2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"      )))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 17 #"apply-prim-num-un"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 6 #"unprim"
0 0 25 3 1 #" "
0 0 14 3 4 #"rand"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 12 #"arit-prim-un"
0 0 25 3 1 #" "
0 0 14 3 6 #"unprim"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"incr-arit"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 4 #"eqv?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 4 #"rand"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 17 #"apply-prim-num-un"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                    "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 7 #"funcion"
0 0 19 3 1 #" "
0 0 19 3 10 #"incremento"
0 0 19 3 1 #" "
0 0 19 3 6 #"espera"
0 0 19 3 1 #" "
0 0 19 3 2 #"un"
0 0 19 3 8 #" numero\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 4 #"rand"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 9 #"decr-arit"
0 0 25 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 4 #"eqv?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 4 #"rand"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 17 #"apply-prim-num-un"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                    "
0 0 19 3 6 #"\"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 39 #"la funcion decremento espera un numero\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 4 #"rand"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 17 3 91 4 0 0 25 29 1 #"\n"
0 0 17 3 10 #";Ambientes"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";definici\303\263n del tipo de dato ambiente"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 25 3 1 #" "
0 0 14 3 11 #"environment"
0 0 25 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 16 #"empty-env-record"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 19 #"extended-env-record"
0 0 25 3 2 #" ("
0 0 14 3 4 #"syms"
0 0 25 3 2 #" ("
0 0 14 3 7 #"list-of"
0 0 25 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 4 #"vals"
0 0 25 3 2 #" ("
0 0 14 3 7 #"list-of"
0 0 25 3 1 #" "
0 0 14 3 13 #"scheme-value?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"scheme-value?"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"v"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";empty-env:      -> enviroment"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";funci\303\263n que crea un ambiente vac\303\255o"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"empty-env"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 3 #" ()"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 16 #"empty-env-record"
0 0 25 3 10 #")))       "
0 0 17 3 43 #";llamado al constructor de ambiente vac\303\255o "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 73
(31
 #";extend-env: <list-of symbols> <list-of numbers> enviroment -> envir"
 #"oment"
) 0 0 25 29 1 #"\n"
0 0 17 3 40 #";funci\303\263n que crea un ambiente extendido"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"extend-env"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"syms"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 19 #"extended-env-record"
0 0 25 3 1 #" "
0 0 14 3 4 #"syms"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))) "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 46
#";funci\303\263n que busca un s\303\255mbolo en un ambiente"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"apply-env"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 3 #"sym"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 11 #"environment"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 16 #"empty-env-record"
0 0 25 3 3 #" ()"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 9 #"apply-env"
0 0 25 3 1 #" "
0 0 19 3 19 #"\"No binding for ~s\""
0 0 25 3 1 #" "
0 0 14 3 3 #"sym"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 19 #"extended-env-record"
0 0 25 3 2 #" ("
0 0 14 3 4 #"syms"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 3 #"pos"
0 0 25 3 2 #" ("
0 0 14 3 18 #"list-find-position"
0 0 25 3 1 #" "
0 0 14 3 3 #"sym"
0 0 25 3 1 #" "
0 0 14 3 4 #"syms"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 3 #"pos"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 8 #"list-ref"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #" "
0 0 14 3 3 #"pos"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 9 #"apply-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 3 #"sym"
0 0 25 3 7 #")))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 89
(32
 #";*******************************************************************"
 #"*********************"
) 0 0 25 29 1 #"\n"
0 0 17 3 21 #";Funciones Auxiliares"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 65
(33
 #"; funciones auxiliares para encontrar la posici\303\263n de un s\303"
 #"\255mbolo"
) 0 0 25 29 1 #"\n"
0 0 17 3 40 #"; en la lista de s\303\255mbolos de unambiente"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"list-find-position"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"sym"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"list-index"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sym1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"eqv?"
0 0 25 3 1 #" "
0 0 14 3 4 #"sym1"
0 0 25 3 1 #" "
0 0 14 3 3 #"sym"
0 0 25 3 3 #")) "
0 0 14 3 3 #"los"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"list-index"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"pred"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 4 #"pred"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 12 #"list-index-r"
0 0 25 3 2 #" ("
0 0 14 3 10 #"list-index"
0 0 25 3 1 #" "
0 0 14 3 4 #"pred"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 2 #"ls"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 12 #"list-index-r"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 12 #"list-index-r"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 22 3 2 #"#f"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"interpretador"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 9       18829 22           0 0           0 3137 0 14 3 9 #"EJEMPLOS:"
0 0 25 29 1 #"\n"
0 0 14 3 9 #"PROGRAMA:"
0 0 25 29 1 #"\n"
0 0 14 3 10 #"a-program:"
0 0 25 3 1 #" "
0 0 14 3 4 #"Todo"
0 0 25 3 1 #" "
0 0 14 3 2 #"lo"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 2 #"se"
0 0 25 3 1 #" "
0 0 14 3 7 #"ejecute"
0 0 25 3 1 #" "
0 0 14 3 2 #"en"
0 0 25 3 1 #" "
0 0 14 3 5 #"B-SAT"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 8 #"programa"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 2 #"su"
0 0 25 3 1 #" "
0 0 14 3 3 #"vez"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 10 #"expresion."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103
(34
 #"********************************************************************"
 #"***********************************"
) 0 0 25 29 1 #"\n"
0 0 14 3 6 #"DATOS:"
0 0 25 29 1 #"\n"
0 0 14 3 14 #"identificador:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 6 #"nombre"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 2 #"se"
0 0 25 3 1 #" "
0 0 14 3 2 #"le"
0 0 25 3 1 #" "
0 0 14 3 6 #"asocia"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 4 #"dato"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"debe"
0 0 25 3 1 #" "
0 0 14 3 7 #"empezar"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 5 #"letra"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 29 1 #"\n"
0 0 14 3 5 #"puede"
0 0 25 3 1 #" "
0 0 14 3 8 #"contener"
0 0 25 3 1 #" "
0 0 14 3 6 #"letras"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 7 #"numeros"
0 0 25 3 1 #" "
0 0 14 3 3 #"sin"
0 0 25 3 1 #" "
0 0 14 3 9 #"espacios."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"id1\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103
(35
 #"--------------------------------------------------------------------"
 #"-----------------------------------"
) 0 0 25 29 1 #"\n"
0 0 14 3 7 #"numero:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 7 #"numero."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"20\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"-20\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"20.1\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"-20.1\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103 35 0 0 25 29 1 #"\n"
0 0 14 3 12 #"hexadecimal:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 1 #" "
0 0 14 3 11 #"hexadecimal"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 3 #"x16"
0 0 25 3 1 #" "
0 0 14 3 4 #"num0"
0 0 25 3 1 #" "
0 0 14 3 4 #"num1"
0 0 25 3 1 #" "
0 0 14 3 7 #"num2..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 18 #"\"(x16 4 1 0 7 14)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103 35 0 0 25 29 1 #"\n"
0 0 14 3 9 #"caracter:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 4 #"sola"
0 0 25 3 1 #" "
0 0 14 3 5 #"letra"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 5 #"forma"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 13 #"identificador"
0 0 22 3 1 #"'"
0 0 29 3 1 #"."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"'A'\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103 35 0 0 25 29 1 #"\n"
0 0 14 3 7 #"cadena:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 6 #"cadena"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 5 #"texto"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 4 #"debe"
0 0 25 3 1 #" "
0 0 14 3 7 #"empezar"
0 0 25 3 1 #" "
0 0 14 3 3 #"con"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 5 #"letra"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 7 #"seguida"
0 0 25 29 1 #"\n"
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 6 #"letras"
0 0 25 3 1 #" "
0 0 14 3 1 #"o"
0 0 25 3 1 #" "
0 0 14 3 7 #"numeros"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 3 #"sin"
0 0 25 3 1 #" "
0 0 14 3 8 #"espacios"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 19 3 17 #"\"EstoEsUnaCadena\""
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 21 #"\"\\\"EjemploDeCadena\\\"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103 35 0 0 25 29 1 #"\n"
0 0 14 3 5 #"bool:"
0 0 25 3 1 #" "
0 0 14 3 3 #"Los"
0 0 25 3 1 #" "
0 0 14 3 9 #"Booleanos"
0 0 25 3 1 #" "
0 0 14 3 2 #"se"
0 0 25 3 1 #" "
0 0 14 3 11 #"implementan"
0 0 25 3 1 #" "
0 0 14 3 5 #"luego"
0 0 25 3 1 #" "
0 0 14 3 4 #"como"
0 0 25 3 1 #" "
0 0 14 3 5 #"parte"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 3 #"las"
0 0 25 3 1 #" "
0 0 14 3 11 #"expresiones"
0 0 25 3 1 #" "
0 0 14 3 9 #"booleanas"
0 0 25 29 1 #"\n"
0 0 14 3 103 34 0 0 25 29 1 #"\n"
0 0 14 3 13 #"DEFINICIONES:"
0 0 25 29 1 #"\n"
0 0 14 3 8 #"var-def:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 7 #"permite"
0 0 25 3 1 #" "
0 0 15 3 7 #"definir"
0 0 25 3 1 #" "
0 0 14 3 9 #"variables"
0 0 25 3 1 #" "
0 0 14 3 8 #"mutables"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 10 #"asignarles"
0 0 25 3 1 #" "
0 0 14 3 7 #"valores"
0 0 25 3 1 #" "
0 0 14 3 9 #"iniciales"
0 0 25 29 1 #"\n"
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 10 #"finalmente"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 7 #"ejecuta"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 3 #"var"
0 0 25 3 1 #"{"
0 0 14 3 6 #"id=exp"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 11 #"id1=exp1..."
0 0 25 3 2 #"} "
0 0 14 3 2 #"in"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 19 #"\"var{x=0,y=1} in y\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103 35 0 0 25 29 1 #"\n"
0 0 14 3 9 #"cons-def:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 7 #"permite"
0 0 25 3 1 #" "
0 0 14 3 7 #"asociar"
0 0 25 3 1 #" "
0 0 14 3 10 #"constantes"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 15 #"identificadores"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 10 #"finalmente"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 7 #"ejecuta"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 10 #"expresi\303\263n"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 4 #"cons"
0 0 25 3 1 #"{"
0 0 14 3 6 #"id=exp"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 8 #"id1=exp1"
0 0 25 3 2 #"} "
0 0 14 3 2 #"in"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 20 #"\"cons{x=0,y=1} in y\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103 35 0 0 25 29 1 #"\n"
0 0 14 3 8 #"rec-def:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 7 #"permite"
0 0 25 3 1 #" "
0 0 14 3 7 #"asociar"
0 0 25 3 1 #" "
0 0 14 3 14 #"procedimientos"
0 0 25 3 1 #" "
0 0 14 3 10 #"recursivos"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 15 #"identificadores"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 10 #"finalmente"
0 0 25 29 1 #"\n"
0 0 14 3 7 #"ejecuta"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 15 3 3 #"rec"
0 0 25 3 1 #"{"
0 0 14 3 3 #"id0"
0 0 25 3 1 #"{"
0 0 14 3 3 #"id1"
0 0 17 3 44 #";id2...}=exp0, id3{id4;id4...}=exp1} in exp2"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 24 #"\"rec{A{x;y;z} = 5} in A\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 39 #"\"rec{A{x;y;z} = 5, B{m;n;o} = -5} in B\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103 34 0 0 25 29 1 #"\n"
0 0 14 3 12 #"APLICACIONES"
0 0 25 3 1 #" "
0 0 14 3 2 #"DE"
0 0 25 3 1 #" "
0 0 14 3 11 #"PRIMITIVAS:"
0 0 25 29 1 #"\n"
0 0 14 3 6 #"-Sobre"
0 0 25 3 1 #" "
0 0 14 3 7 #"enteros"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 9 #"floating:"
0 0 25 29 1 #"\n"
0 0 14 3 18 #"\302\260primapp-num-bin:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"operacion"
0 0 25 3 1 #" "
0 0 14 3 7 #"binaria"
0 0 25 3 1 #" "
0 0 14 3 3 #"con"
0 0 25 3 1 #" "
0 0 14 3 7 #"numeros"
0 0 25 3 1 #" "
0 0 14 3 7 #"enteros"
0 0 25 3 1 #" "
0 0 14 3 1 #"o"
0 0 25 3 1 #" "
0 0 14 3 9 #"flotantes"
0 0 29 3 1 #","
0 0 25 29 1 #"\n"
0 0 14 3 3 #"las"
0 0 25 3 1 #" "
0 0 14 3 10 #"primitivas"
0 0 25 3 1 #" "
0 0 14 3 8 #"binarias"
0 0 25 3 1 #" "
0 0 14 3 4 #"son:"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 1 #"*"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 1 #"/"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"%."
0 0 25 3 1 #" "
0 0 14 3 2 #"Se"
0 0 25 3 1 #" "
0 0 14 3 7 #"aplican"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #"("
0 0 14 3 4 #"num1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"num2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"-(4, 2)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"+(4, 2)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"*(4, 2)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 17 #"\302\260primapp-num-un:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"operacion"
0 0 25 3 1 #" "
0 0 14 3 6 #"unaria"
0 0 25 3 1 #" "
0 0 14 3 3 #"con"
0 0 25 3 1 #" "
0 0 14 3 7 #"numeros"
0 0 25 3 1 #" "
0 0 14 3 7 #"enteros"
0 0 25 3 1 #" "
0 0 14 3 1 #"o"
0 0 25 3 1 #" "
0 0 14 3 9 #"flotantes"
0 0 29 3 1 #","
0 0 25 29 1 #"\n"
0 0 14 3 3 #"las"
0 0 25 3 1 #" "
0 0 14 3 10 #"primitivas"
0 0 25 3 1 #" "
0 0 14 3 7 #"unarias"
0 0 25 3 1 #" "
0 0 14 3 4 #"son:"
0 0 25 3 1 #" "
0 0 14 3 4 #"add1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"sub1."
0 0 25 3 1 #" "
0 0 14 3 2 #"Se"
0 0 25 3 1 #" "
0 0 14 3 7 #"aplican"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #"("
0 0 14 3 4 #"num1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"add1(10)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"sub1(10)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 6 #"-Sobre"
0 0 25 3 1 #" "
0 0 14 3 7 #"numeros"
0 0 25 3 1 #" "
0 0 14 3 14 #"hexadecimales:"
0 0 25 29 1 #"\n"
0 0 14 3 18 #"\302\260primapp-hex-bin:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"operacion"
0 0 25 3 1 #" "
0 0 14 3 7 #"binaria"
0 0 25 3 1 #" "
0 0 14 3 3 #"con"
0 0 25 3 1 #" "
0 0 14 3 7 #"numeros"
0 0 25 3 1 #" "
0 0 14 3 13 #"hexadecimales"
0 0 29 3 1 #","
0 0 25 29 1 #"\n"
0 0 14 3 3 #"las"
0 0 25 3 1 #" "
0 0 14 3 10 #"primitivas"
0 0 25 3 1 #" "
0 0 14 3 8 #"binarias"
0 0 25 3 1 #" "
0 0 14 3 4 #"son:"
0 0 25 3 1 #" "
0 0 14 3 3 #"h.+"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 3 #"h.-"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"h.*."
0 0 25 3 1 #" "
0 0 14 3 2 #"Se"
0 0 25 3 1 #" "
0 0 14 3 7 #"aplican"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 29 #"\"h.+((x16 0 1), (x16 3 5 0))\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 29 #"\"h.-((x16 0 1), (x16 3 5 0))\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 29 #"\"h.*((x16 0 1), (x16 3 5 0))\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 17 #"\302\260primapp-hex-un:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"operacion"
0 0 25 3 1 #" "
0 0 14 3 6 #"unaria"
0 0 25 3 1 #" "
0 0 14 3 3 #"con"
0 0 25 3 1 #" "
0 0 14 3 7 #"numeros"
0 0 25 3 1 #" "
0 0 14 3 13 #"hexadecimales"
0 0 29 3 1 #","
0 0 25 29 1 #"\n"
0 0 14 3 3 #"las"
0 0 25 3 1 #" "
0 0 14 3 10 #"primitivas"
0 0 25 3 1 #" "
0 0 14 3 7 #"unarias"
0 0 25 3 1 #" "
0 0 14 3 4 #"son:"
0 0 25 3 1 #" "
0 0 14 3 6 #"h.add1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 7 #"h.sub1."
0 0 25 3 1 #" "
0 0 14 3 2 #"Se"
0 0 25 3 1 #" "
0 0 14 3 7 #"aplican"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 19 #"\"h.add1((x16 0 1))\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 19 #"\"h.sub1((x16 0 1))\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 6 #"-Sobre"
0 0 25 3 1 #" "
0 0 14 3 8 #"cadenas:"
0 0 25 29 1 #"\n"
0 0 14 3 18 #"\302\260primapp-cad-bin:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"operacion"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 3 #"dos"
0 0 25 3 1 #" "
0 0 14 3 1 #"o"
0 0 25 3 1 #" "
0 0 14 3 3 #"mas"
0 0 25 3 1 #" "
0 0 14 3 7 #"cadenas"
0 0 29 3 1 #","
0 0 25 29 1 #"\n"
0 0 14 3 6 #"usando"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 9 #"primitiva"
0 0 25 3 1 #" "
0 0 14 3 7 #"concat."
0 0 25 3 1 #" "
0 0 14 3 5 #"Tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 7 #"exp2..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 38 #"\"concat(\\\"Hola\\\" \\\"Mucho\\\" \\\"Gusto\\\")\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 17 #"\302\260primapp-cad-un:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"operacion"
0 0 25 3 1 #" "
0 0 14 3 3 #"con"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 6 #"cadena"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 6 #"usando"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 9 #"primitiva"
0 0 25 29 1 #"\n"
0 0 14 3 7 #"lenght."
0 0 25 3 1 #" "
0 0 14 3 5 #"Tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 18 #"\"lenght(\\\"Hola\\\")\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103 34 0 0 25 29 1 #"\n"
0 0 14 3 5 #"DATOS"
0 0 25 3 1 #" "
0 0 14 3 13 #"PREDEFINIDOS:"
0 0 25 29 1 #"\n"
0 0 14 3 6 #"lista:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 5 #"reune"
0 0 25 3 1 #" "
0 0 14 3 5 #"otras"
0 0 25 3 1 #" "
0 0 14 3 11 #"expresiones"
0 0 25 3 1 #" "
0 0 14 3 2 #"no"
0 0 25 3 1 #" "
0 0 14 3 8 #"mutables"
0 0 25 3 1 #" "
0 0 14 3 9 #"separados"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 5 #"punto"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 4 #"coma"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 10 #"encerrados"
0 0 25 29 1 #"\n"
0 0 14 3 5 #"entre"
0 0 25 3 1 #" "
0 0 14 3 7 #"llaves."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 20 #"\"{a; 1; b; 2; c; 3}\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 11 #"EXPRESIONES"
0 0 25 3 1 #" "
0 0 14 3 5 #"SOBRE"
0 0 25 3 1 #" "
0 0 14 3 7 #"LISTAS:"
0 0 25 29 1 #"\n"
0 0 14 3 8 #"UNARIAS:"
0 0 25 3 1 #" "
0 0 14 3 3 #"son"
0 0 25 3 1 #" "
0 0 14 3 13 #"representadas"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 15 #"primapp-list-un"
0 0 25 29 1 #"\n"
0 0 14 3 11 #"-es-vacio?:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 9 #"determina"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 5 #"lista"
0 0 25 3 1 #" "
0 0 14 3 5 #"vacia"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 6 #"vacio?"
0 0 25 3 1 #"("
0 0 14 3 3 #"exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"vacio?({})\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 11 #"-es-lista?:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 9 #"determina"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 5 #"lista"
0 0 25 3 1 #" "
0 0 14 3 6 #"valida"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 6 #"lista?"
0 0 25 3 1 #"("
0 0 14 3 3 #"exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 19 #"\"lista?({1; 2; 3})\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 12 #"GENERADORAS:"
0 0 25 3 1 #" "
0 0 14 3 3 #"son"
0 0 25 3 1 #" "
0 0 14 3 13 #"representadas"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 16 #"primapp-list-gen"
0 0 25 29 1 #"\n"
0 0 14 3 13 #"-crear-lista:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 4 #"crea"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 5 #"lista"
0 0 25 3 1 #" "
0 0 14 3 3 #"con"
0 0 25 3 1 #" "
0 0 14 3 3 #"las"
0 0 25 3 1 #" "
0 0 14 3 11 #"expresiones"
0 0 25 3 1 #" "
0 0 14 3 5 #"dadas"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 11 #"crear-lista"
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 7 #"exp2..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 24 #"\"crear-lista(1 2 3 4 5)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 14 #"-juntar-lista:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 3 #"une"
0 0 25 3 1 #" "
0 0 14 3 6 #"listas"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"en"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 4 #"sola"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 6 #"append"
0 0 25 3 2 #"({"
0 0 14 3 4 #"exp1"
0 0 25 3 3 #"} {"
0 0 14 3 4 #"exp2"
0 0 17 3 11 #"; exp3}...)"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 20 #"\"append({1} {2; 3})\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"QUE"
0 0 25 3 1 #" "
0 0 14 3 9 #"RETORNAN:"
0 0 25 3 1 #" "
0 0 14 3 3 #"son"
0 0 25 3 1 #" "
0 0 14 3 13 #"representadas"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 16 #"primapp-list-ret"
0 0 25 29 1 #"\n"
0 0 14 3 12 #"-ret-cabeza:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 7 #"retorna"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 6 #"primer"
0 0 25 3 1 #" "
0 0 14 3 8 #"elemento"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 5 #"lista"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 6 #"cabeza"
0 0 25 3 2 #"({"
0 0 14 3 4 #"exp1"
0 0 17 3 11 #"; exp2...})"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 16 #"\"cabeza({2; 3})\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 10 #"-ret-cola:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 7 #"retorna"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 5 #"resto"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 9 #"elementos"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 5 #"lista"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 8 #"despu\303\251s"
0 0 25 3 1 #" "
0 0 14 3 3 #"del"
0 0 25 3 1 #" "
0 0 14 3 7 #"primero"
0 0 29 3 1 #","
0 0 25 29 1 #"\n"
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 4 #"cola"
0 0 25 3 2 #"({"
0 0 14 3 4 #"exp1"
0 0 17 3 12 #"; exp2 ...})"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 14 #"\"cola({2; 3})\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 7 #"GENERAR"
0 0 25 3 1 #" "
0 0 14 3 6 #"VACIO:"
0 0 25 29 1 #"\n"
0 0 14 3 13 #"-lista-vacia:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 5 #"lista"
0 0 25 3 1 #" "
0 0 14 3 5 #"vacia"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 2 #" ("
0 0 14 3 5 #"vacio"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"(vacio)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103 35 0 0 25 29 1 #"\n"
0 0 14 3 12 #"vector:DATOS"
0 0 25 3 1 #" "
0 0 14 3 13 #"PREDEFINIDOS:"
0 0 25 29 1 #"\n"
0 0 14 3 7 #"vector:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 5 #"reune"
0 0 25 3 1 #" "
0 0 14 3 5 #"otras"
0 0 25 3 1 #" "
0 0 14 3 11 #"expresiones"
0 0 25 3 1 #" "
0 0 14 3 2 #"no"
0 0 25 3 1 #" "
0 0 14 3 8 #"mutables"
0 0 25 3 1 #" "
0 0 14 3 9 #"separados"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 5 #"punto"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 4 #"coma"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 10 #"encerrados"
0 0 25 29 1 #"\n"
0 0 14 3 5 #"entre"
0 0 25 3 1 #" "
0 0 14 3 10 #"corchetes."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 26 #"\"vector[a; 1; b; 2; c; 3]\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 11 #"EXPRESIONES"
0 0 25 3 1 #" "
0 0 14 3 5 #"SOBRE"
0 0 25 3 1 #" "
0 0 14 3 9 #"VECTORES:"
0 0 25 29 1 #"\n"
0 0 14 3 8 #"UNARIAS:"
0 0 25 3 1 #" "
0 0 14 3 3 #"son"
0 0 25 3 1 #" "
0 0 14 3 13 #"representadas"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 17 #"primapp-vector-un"
0 0 25 29 1 #"\n"
0 0 14 3 12 #"-es-vector?:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 9 #"determina"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 6 #"vector"
0 0 25 3 1 #" "
0 0 14 3 6 #"valido"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 7 #"vector?"
0 0 25 3 1 #"("
0 0 14 3 3 #"exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 26 #"\"vector?(vector[1; 2; 3])\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 12 #"GENERADORAS:"
0 0 25 3 1 #" "
0 0 14 3 3 #"son"
0 0 25 3 1 #" "
0 0 14 3 13 #"representadas"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 18 #"primapp-vector-gen"
0 0 25 29 1 #"\n"
0 0 14 3 14 #"-crear-vector:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 4 #"crea"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 6 #"vector"
0 0 25 3 1 #" "
0 0 14 3 3 #"con"
0 0 25 3 1 #" "
0 0 14 3 3 #"las"
0 0 25 3 1 #" "
0 0 14 3 11 #"expresiones"
0 0 25 3 1 #" "
0 0 14 3 5 #"dadas"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 12 #"crear-vector"
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 7 #"exp2..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 29 #"\"crear-vector(1, 2, 3, 4, 5)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"QUE"
0 0 25 3 1 #" "
0 0 14 3 8 #"RETORNA:"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 12 #"representada"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 18 #"primapp-vector-ref"
0 0 25 29 1 #"\n"
0 0 14 3 12 #"-ref-vector:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 7 #"retorna"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 5 #"valor"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 6 #"vector"
0 0 25 3 1 #" "
0 0 14 3 2 #"en"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 10 #"referencia"
0 0 25 3 1 #" "
0 0 14 3 8 #"indicada"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 10 #"ref-vector"
0 0 25 3 1 #"("
0 0 14 3 4 #"num1"
0 0 25 3 1 #" "
0 0 14 3 4 #"from"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 36 #"\"ref-vector(0 from vector[1;2;3;4])\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"QUE"
0 0 25 3 1 #" "
0 0 14 3 9 #"MODIFICA:"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 12 #"representada"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 18 #"primapp-vector-set"
0 0 25 29 1 #"\n"
0 0 14 3 12 #"-set-vector:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 8 #"modifica"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 5 #"valor"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 6 #"vector"
0 0 25 3 1 #" "
0 0 14 3 2 #"en"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 10 #"referencia"
0 0 25 3 1 #" "
0 0 14 3 8 #"indicada"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 10 #"set-vector"
0 0 25 3 1 #"("
0 0 14 3 4 #"num1"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"from"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 39 #"\"set-vector(0 to -2 from vector[2; 3])\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 103 35 0 0 25 29 1 #"\n"
0 0 14 3 9 #"registro:"
0 0 25 29 1 #"\n"
0 0 14 3 14 #"registro:DATOS"
0 0 25 3 1 #" "
0 0 14 3 13 #"PREDEFINIDOS:"
0 0 25 29 1 #"\n"
0 0 14 3 9 #"registro:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 5 #"reune"
0 0 25 3 1 #" "
0 0 14 3 5 #"otras"
0 0 25 3 1 #" "
0 0 14 3 11 #"expresiones"
0 0 25 3 1 #" "
0 0 14 3 2 #"no"
0 0 25 3 1 #" "
0 0 14 3 8 #"mutables"
0 0 25 3 1 #" "
0 0 14 3 9 #"separados"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 5 #"punto"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 4 #"coma"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 10 #"encerrados"
0 0 25 29 1 #"\n"
0 0 14 3 5 #"entre"
0 0 25 3 1 #" "
0 0 14 3 7 #"llaves."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 23 #"\"registro{x=2;Y=3;Z=4}\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 11 #"EXPRESIONES"
0 0 25 3 1 #" "
0 0 14 3 5 #"SOBRE"
0 0 25 3 1 #" "
0 0 14 3 10 #"REGISTROS:"
0 0 25 29 1 #"\n"
0 0 14 3 8 #"UNARIAS:"
0 0 25 3 1 #" "
0 0 14 3 3 #"son"
0 0 25 3 1 #" "
0 0 14 3 13 #"representadas"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 19 #"primapp-registro-un"
0 0 25 29 1 #"\n"
0 0 14 3 14 #"-es-registro?:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 9 #"determina"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 8 #"registro"
0 0 25 3 1 #" "
0 0 14 3 6 #"valido"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 9 #"registro?"
0 0 25 3 1 #"("
0 0 14 3 3 #"exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 34 #"\"registro?(registro{x=2;Y=3;Z=4})\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 12 #"GENERADORAS:"
0 0 25 3 1 #" "
0 0 14 3 3 #"son"
0 0 25 3 1 #" "
0 0 14 3 13 #"representadas"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 20 #"primapp-registro-gen"
0 0 25 29 1 #"\n"
0 0 14 3 16 #"-crear-registro:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 4 #"crea"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 8 #"registro"
0 0 25 3 1 #" "
0 0 14 3 3 #"con"
0 0 25 3 1 #" "
0 0 14 3 3 #"las"
0 0 25 3 1 #" "
0 0 14 3 11 #"expresiones"
0 0 25 3 1 #" "
0 0 14 3 5 #"dadas"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 14 #"crear-registro"
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 7 #"exp2..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 31 #"\"crear-registro(a=1, b=2, c=3)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"QUE"
0 0 25 3 1 #" "
0 0 14 3 8 #"RETORNA:"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 12 #"representada"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 20 #"primapp-registro-ref"
0 0 25 29 1 #"\n"
0 0 14 3 14 #"-ref-registro:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 7 #"retorna"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 5 #"valor"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 2 #"le"
0 0 25 3 1 #" "
0 0 14 3 11 #"corresponde"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 14 3 2 #"en"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 8 #"registro"
0 0 29 3 1 #","
0 0 25 29 1 #"\n"
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 12 #"ref-registro"
0 0 25 3 1 #"("
0 0 14 3 3 #"id0"
0 0 25 3 1 #" "
0 0 14 3 4 #"from"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 44 #"\"ref-registro(x from registro{x=2;Y=3;Z=4})\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"QUE"
0 0 25 3 1 #" "
0 0 14 3 9 #"MODIFICA:"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 12 #"representada"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 20 #"primapp-registro-set"
0 0 25 29 1 #"\n"
0 0 14 3 14 #"-set-registro:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 8 #"modifica"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 5 #"valor"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 2 #"le"
0 0 25 3 1 #" "
0 0 14 3 11 #"corresponde"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 25 3 1 #" "
0 0 14 3 2 #"en"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 8 #"registro"
0 0 29 3 1 #","
0 0 25 29 1 #"\n"
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 12 #"set-registro"
0 0 25 3 1 #"("
0 0 14 3 3 #"id0"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp0"
0 0 25 3 1 #" "
0 0 14 3 4 #"from"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 50 #"\"set-registro(x to -2 from registro{x=2;Y=3;Z=4})\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103 35 0 0 25 29 1 #"\n"
0 0 14 3 19 #"expresion-booleana:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 4 #"esta"
0 0 25 3 1 #" "
0 0 14 3 10 #"conformada"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"exp-bool."
0 0 25 29 1 #"\n"
0 0 14 3 11 #"OPERACIONES"
0 0 25 3 1 #" "
0 0 14 3 10 #"PREDICADO:"
0 0 25 3 1 #" "
0 0 14 3 3 #"son"
0 0 25 3 1 #" "
0 0 14 3 13 #"representadas"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 13 #"exp-bool-pref"
0 0 25 29 1 #"\n"
0 0 14 3 7 #"-menor:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 9 #"determina"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 5 #"menor"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 4 #"otro"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 1 #"<"
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"<(1, 2)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 7 #"-mayor:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 9 #"determina"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 5 #"mayor"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 4 #"otro"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 9 #"\">(1, 2)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 13 #"-menor-igual:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 9 #"determina"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 5 #"menor"
0 0 25 3 1 #" "
0 0 14 3 1 #"o"
0 0 25 3 1 #" "
0 0 14 3 5 #"igual"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 4 #"otro"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 2 #"<="
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"<=(1, 2)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 13 #"-mayor-igual:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 9 #"determina"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 5 #"mayor"
0 0 25 3 1 #" "
0 0 14 3 1 #"o"
0 0 25 3 1 #" "
0 0 14 3 5 #"igual"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 4 #"otro"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 2 #">="
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 10 #"\">=(1, 2)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 13 #"-equivalente:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 9 #"determina"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 5 #"igual"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 4 #"otro"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 2 #"=="
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"==(1, 2)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 11 #"-diferente:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 9 #"determina"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 9 #"diferente"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 4 #"otro"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 2 #"<>"
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"<>(1, 2)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 11 #"OPERACIONES"
0 0 25 3 1 #" "
0 0 14 3 9 #"BINARIAS:"
0 0 25 3 1 #" "
0 0 14 3 3 #"son"
0 0 25 3 1 #" "
0 0 14 3 13 #"representadas"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 12 #"exp-bool-bin"
0 0 25 29 1 #"\n"
0 0 14 3 12 #"-conjuncion:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 6 #"evalua"
0 0 25 3 1 #" "
0 0 14 3 3 #"dos"
0 0 25 3 1 #" "
0 0 14 3 11 #"expresiones"
0 0 25 3 1 #" "
0 0 14 3 9 #"booleanas"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 7 #"retorna"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 5 #"ambas"
0 0 25 3 1 #" "
0 0 14 3 3 #"son"
0 0 25 29 1 #"\n"
0 0 14 3 10 #"verdaderas"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"en"
0 0 25 3 1 #" "
0 0 14 3 9 #"cualquier"
0 0 25 3 1 #" "
0 0 14 3 4 #"otro"
0 0 25 3 1 #" "
0 0 14 3 4 #"caso"
0 0 25 3 1 #" "
0 0 14 3 7 #"retorna"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #"("
0 0 14 3 9 #"exp-bool1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 9 #"exp-bool2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 18 #"\"and(true, false)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 12 #"-disyuncion:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 6 #"evalua"
0 0 25 3 1 #" "
0 0 14 3 3 #"dos"
0 0 25 3 1 #" "
0 0 14 3 11 #"expresiones"
0 0 25 3 1 #" "
0 0 14 3 9 #"booleanas"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 7 #"retorna"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 2 #"al"
0 0 25 3 1 #" "
0 0 14 3 5 #"menos"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 29 1 #"\n"
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 9 #"verdadera"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 5 #"ambas"
0 0 25 3 1 #" "
0 0 14 3 3 #"son"
0 0 25 3 1 #" "
0 0 14 3 6 #"falsas"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 7 #"retorna"
0 0 25 3 1 #" "
0 0 14 3 6 #"false."
0 0 25 3 1 #" "
0 0 14 3 5 #"Tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 2 #"or"
0 0 25 3 1 #"("
0 0 14 3 9 #"exp-bool1"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 9 #"exp-bool2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 17 #"\"or(true, false)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 9 #"OPERACION"
0 0 25 3 1 #" "
0 0 14 3 7 #"UNARIA:"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 12 #"representada"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 11 #"exp-bool-un"
0 0 25 29 1 #"\n"
0 0 14 3 10 #"-negacion:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 7 #"retorna"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 8 #"negacion"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 8 #"booleana"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"not"
0 0 25 3 1 #"("
0 0 14 3 8 #"exp-bool"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"not(false)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 9 #"BOOLEANOS"
0 0 25 3 1 #" "
0 0 14 3 5 #"BASE:"
0 0 25 3 1 #" "
0 0 14 3 3 #"son"
0 0 25 3 1 #" "
0 0 14 3 13 #"representados"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 15 #"booleano-simple"
0 0 25 29 1 #"\n"
0 0 14 3 12 #"-bool-false:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 5 #"false"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"false\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 11 #"-bool-true:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 4 #"true"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"true\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 98
(36
 #"--------------------------------------------------------------------"
 #"------------------------------"
) 0 0 25 29 1 #"\n"
0 0 14 3 11 #"ESTRUCTURAS"
0 0 25 3 1 #" "
0 0 14 3 2 #"DE"
0 0 25 3 1 #" "
0 0 14 3 8 #"CONTROL:"
0 0 25 29 1 #"\n"
0 0 15 3 10 #"begin-exp:"
0 0 25 3 1 #" "
0 0 14 3 7 #"Permite"
0 0 25 3 1 #" "
0 0 14 3 8 #"ejecutar"
0 0 25 3 1 #" "
0 0 14 3 11 #"expresiones"
0 0 25 3 1 #" "
0 0 14 3 16 #"secuencialmente."
0 0 25 3 1 #" "
0 0 14 3 5 #"Tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 15 3 5 #"begin"
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 17 3 14 #"; exp2...) end"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 47 #"\"begin{if ==(x,1) then 1 [else 2] end ; x} end\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 7 #"if-exp:"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 10 #"estructura"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 7 #"control"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 7 #"permite"
0 0 25 3 1 #" "
0 0 14 3 7 #"evaluar"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"condicion"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 9 #"verdadera"
0 0 25 3 1 #" "
0 0 14 3 1 #"o"
0 0 25 3 1 #" "
0 0 14 3 6 #"falsa."
0 0 25 29 1 #"\n"
0 0 14 3 5 #"Tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 9 #"bool-exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"then"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 2 #" ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 2 #"] "
0 0 14 3 3 #"end"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 32 #"\"if ==(x,1) then 1 [else 2] end\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 12 #"while-exp:es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 10 #"estructura"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 10 #"repeticion"
0 0 25 3 1 #" "
0 0 14 3 5 #"while"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 2 #"se"
0 0 25 3 1 #" "
0 0 14 3 7 #"ejecuta"
0 0 25 3 1 #" "
0 0 14 3 5 #"hasta"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 10 #"condiccion"
0 0 25 3 1 #" "
0 0 14 3 3 #"sea"
0 0 25 3 1 #" "
0 0 14 3 5 #"falsa"
0 0 25 29 1 #"\n"
0 0 14 3 1 #"o"
0 0 25 3 1 #" "
0 0 14 3 10 #"verdadera."
0 0 25 29 1 #"\n"
0 0 14 3 5 #"Tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 14 3 5 #"while"
0 0 25 3 1 #" "
0 0 14 3 9 #"bool-exp1"
0 0 25 3 1 #" "
0 0 15 3 2 #"do"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 2 #") "
0 0 14 3 3 #"end"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 54 #"\"while >(x,1) do (if ==(x,1) then 1 [else 2] end)done\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 10 #"for-exp:es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 10 #"estructura"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 10 #"repeticion"
0 0 25 3 1 #" "
0 0 15 3 3 #"for"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 2 #"se"
0 0 25 3 1 #" "
0 0 14 3 7 #"ejecuta"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 6 #"cierto"
0 0 25 3 1 #" "
0 0 14 3 6 #"numero"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 5 #"veces"
0 0 29 3 1 #","
0 0 25 29 1 #"\n"
0 0 14 3 6 #"emplea"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"primitiva"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 6 #"indica"
0 0 25 3 1 #" "
0 0 14 3 2 #"si"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 8 #"contador"
0 0 25 3 1 #" "
0 0 14 3 4 #"debe"
0 0 25 3 1 #" "
0 0 14 3 8 #"aumentar"
0 0 25 3 1 #" "
0 0 14 3 1 #"o"
0 0 25 3 1 #" "
0 0 14 3 9 #"disminuir"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 3 #"las"
0 0 25 3 1 #" "
0 0 14 3 10 #"primitivas"
0 0 25 3 1 #" "
0 0 14 3 4 #"son:"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 29 3 1 #","
0 0 25 29 1 #"\n"
0 0 14 3 7 #"downto."
0 0 25 29 1 #"\n"
0 0 14 3 5 #"Tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 3 1 #" "
0 0 15 3 3 #"for"
0 0 25 3 1 #" "
0 0 14 3 3 #"id1"
0 0 25 3 1 #" "
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"prim"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 15 3 2 #"do"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp3"
0 0 25 3 2 #") "
0 0 14 3 4 #"done"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 29 #"\" for x = 1 to 3 do( y )done\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103 35 0 0 25 29 1 #"\n"
0 0 14 3 9 #"VARIABLES"
0 0 25 3 1 #" "
0 0 14 3 9 #"MUTABLES:"
0 0 25 29 1 #"\n"
0 0 14 3 8 #"set-exp:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 6 #"cambio"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 5 #"valor"
0 0 25 3 1 #" "
0 0 14 3 2 #"en"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 8 #"variable"
0 0 25 3 1 #" "
0 0 14 3 7 #"mutable"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"set"
0 0 25 3 1 #" "
0 0 14 3 3 #"id1"
0 0 25 3 1 #" "
0 0 14 3 2 #"->"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"set x -> 20\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103 35 0 0 25 29 1 #"\n"
0 0 14 3 10 #"ITERACION:"
0 0 25 29 1 #"\n"
0 0 14 3 10 #"print-exp:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 6 #"salida"
0 0 25 3 1 #" "
0 0 14 3 2 #"en"
0 0 25 3 1 #" "
0 0 14 3 8 #"pantalla"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 5 #"print"
0 0 25 3 1 #"("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"print(+(2,2))\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 103 35 0 0 25 29 1 #"\n"
0 0 14 3 7 #"SOPORTE"
0 0 25 3 1 #" "
0 0 14 3 4 #"PARA"
0 0 25 3 1 #" "
0 0 14 3 10 #"INSTANCIAS"
0 0 25 3 1 #" "
0 0 14 3 4 #"SAT:"
0 0 25 29 1 #"\n"
0 0 14 3 9 #"-FNC-exp:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 8 #"problema"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 12 #"satisfaccion"
0 0 25 3 1 #" "
0 0 14 3 8 #"booleana"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 14 3 3 #"FNC"
0 0 25 3 1 #" "
0 0 14 3 4 #"num1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"clausula1"
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 14 3 12 #"clausula2..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 26 #"\"FNC 2 ((1 or 2)and (-2))\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 11 #"-or-clause:"
0 0 25 3 1 #" "
0 0 14 3 2 #"Es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 10 #"representa"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 7 #"calsula"
0 0 25 3 1 #" "
0 0 14 3 2 #"or"
0 0 25 3 1 #" "
0 0 14 3 5 #"usada"
0 0 25 3 1 #" "
0 0 14 3 2 #"en"
0 0 25 3 1 #" "
0 0 14 3 3 #"las"
0 0 25 3 1 #" "
0 0 14 3 7 #"FNC-exp"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 5 #"tiene"
0 0 25 3 1 #" "
0 0 14 3 2 #"al"
0 0 25 3 1 #" "
0 0 14 3 6 #"forma:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"num1"
0 0 25 3 1 #" "
0 0 14 3 2 #"or"
0 0 25 3 1 #" "
0 0 14 3 7 #"num2..."
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 2 #"No"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 2 #"no"
0 0 25 3 1 #" "
0 0 14 3 2 #"se"
0 0 25 3 1 #" "
0 0 14 3 5 #"puede"
0 0 25 3 1 #" "
0 0 14 3 7 #"mostrar"
0 0 25 3 1 #" "
0 0 14 3 8 #"mediante"
0 0 25 3 1 #" "
0 0 14 3 11 #"scan&parse."
0 0 25 29 1 #"\n"
0 0 14 3 99
(37
 #"--------------------------------------------------------------------"
 #"-------------------------------"
) 0 0 25 29 1 #"\n"
0 0 14 3 14 #"PROCEDIMIENTOS"
0 0 25 29 1 #"\n"
0 0 14 3 9 #"proc-exp:"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 11 #"respresenta"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 13 #"procedimiento"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 4 #"cual"
0 0 25 3 1 #" "
0 0 14 3 7 #"retorna"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 5 #"valor"
0 0 25 3 1 #" "
0 0 14 3 2 #"al"
0 0 25 3 1 #" "
0 0 14 3 3 #"ser"
0 0 25 3 1 #" "
0 0 14 3 8 #"invocado"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 44 #"\"proc (x y) {if >(x,2) then 0 [else 1] end}\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 12 #"procrec-exp:"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 3 #"una"
0 0 25 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 25 3 1 #" "
0 0 14 3 3 #"que"
0 0 25 3 1 #" "
0 0 14 3 11 #"respresenta"
0 0 25 3 1 #" "
0 0 14 3 2 #"un"
0 0 25 3 1 #" "
0 0 14 3 13 #"procedimiento"
0 0 25 3 1 #" "
0 0 14 3 2 #"el"
0 0 25 3 1 #" "
0 0 14 3 4 #"cual"
0 0 25 3 1 #" "
0 0 14 3 5 #"puede"
0 0 25 3 1 #" "
0 0 14 3 3 #"ser"
0 0 25 3 1 #" "
0 0 14 3 8 #"invocado"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 6 #"manera"
0 0 25 3 1 #" "
0 0 14 3 9 #"recursiva"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 87
(38
 #"\"procrec  (suma(x)= if >(x,2) then proc (suma y) {sub1(1)} [else 0]"
 #" end) in [suma , 1]\""
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 10 #"proc-prim:"
0 0 25 3 1 #" "
0 0 14 3 7 #"Permite"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 4 #"paso"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 10 #"estructura"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 5 #"valor"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"[x , y]\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 10 #"proc-prim:"
0 0 25 3 1 #" "
0 0 14 3 7 #"Permite"
0 0 25 3 1 #" "
0 0 14 3 2 #"es"
0 0 25 3 1 #" "
0 0 14 3 4 #"paso"
0 0 25 3 1 #" "
0 0 14 3 2 #"de"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 10 #"estructura"
0 0 25 3 1 #" "
0 0 14 3 3 #"por"
0 0 25 3 1 #" "
0 0 14 3 10 #"referencia"
0 0 25 3 1 #" "
0 0 14 3 3 #"con"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 10 #"distincion"
0 0 25 3 1 #" "
0 0 14 3 1 #"&"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"scan&parse"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"[x , &y]\""
0 0 25 3 1 #")"
0           0 0           0
